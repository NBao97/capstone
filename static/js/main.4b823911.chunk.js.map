{"version":3,"sources":["JsPage/ContractTypeForAdmin.js","JsPage/UpdateProfileCompany.js","actions/EmployeeAction.js","JsPage/AddEmployee.js","JsPage/ViewEmployee.js","JsPage/EmployeeSearch.js","JsPage/EmployeeTable.js","JsPage/TemplateUpload.js","actions/ContractType.js","JsPage/ContractTypeSearch.js","actions/SignatureAction.js","JsPage/AddSignature.js","JsPage/UpdateSignature.js","JsPage/SignatureSearch.js","JsPage/SignatureList.js","JsPage/ContractSearch.js","actions/ContractAction.js","JsPage/CreateContract.js","JsPage/ChooseContractTemplate.js","JsPage/AddContractExtension.js","JsPage/UpdateContractExtension.js","JsPage/ContractExtensionTable.js","actions/ContractExtension.js","JsPage/ViewContractPage.js","JsPage/ContractTable.js","actions/CustomerAction.js","JsPage/AddCustomer.js","JsPage/ViewCustomer.js","JsPage/CustomerSearch.js","JsPage/CustomerTable.js","JsPage/ContractTypeTable.js","JsPage/UpdateProfile.js","JsPage/Header.js","actions/loginAction.js","JsPage/EmployeeSideMenu.js","JsPage/ViewUser.js","JsPage/UserTable.js","actions/UserAction.js","JsPage/SendJoinRequest.js","JsPage/ForgetPassword.js","JsPage/Login/LoginPage.js","App.js","serviceWorker.js","reducers/logins.js","reducers/contracts.js","reducers/contractExtensions.js","reducers/customers.js","reducers/contractTypes.js","reducers/users.js","reducers/signatures.js","reducers/employees.js","reducers/myReducers.js","index.js"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","UpdateProfileCompany","onFinish","values","console","log","onFinishFailed","errorInfo","state","bind","style","margin","width","paddingLeft","border","type","value","onClick","this","Cancel","textAlign","name","initialValues","remember","labelAlign","Item","label","IdcardOutlined","rules","required","message","MailOutlined","requiredMark","BankOutlined","HomeOutlined","htmlType","CloudUploadOutlined","RedoOutlined","React","Component","createEmployee","employee","AddEmployee","props","onSubmit","email","address","status","role","setState","finish","Fragment","justify","align","height","Grid","container","spacing","item","xs","sm","TextField","id","fullWidth","autoComplete","connect","dispatch","ViewEmployee","EmployeeSearch","className","title","size","extra","ref","shape","icon","SearchOutlined","Column","Table","EmployeeList","ColumnGroup","openEmployee","OpenAddEmployee","OpenViewEmployee","newEmployee","length","UserAddOutlined","dataSource","rowClassName","record","index","dataIndex","key","render","text","color","toUpperCase","EditOutlined","fontSize","theme","OpenViewCustomer","DeleteOutlined","UserOutlined","myEmployeeReducer","TemplateUpload","Select","Option","approvalBeforeSign","approverList","handleChange","ChooseApproval","concat","httpEquiv","content","rel","href","data-styled","data-styled-version","dangerouslySetInnerHTML","__html","stroke","fill","strokeWidth","viewBox","xmlns","d","src","createContractType","contractType","ContractTypeSearch","i","contract","contract_type","fileName","push","ContractTypeForAdmin","showTemplateCreate","newContractType","FileOutlined","FileWordOutlined","myContractTypeReducer","createSignature","signature","AddSignature","provider","expired","UpdateSignature","SignatureSearch","SignatureList","newSignature","mySignatureReducer","ContractSearch","createContract","RangePicker","DatePicker","CreateContract","contract_name","ben_tao_hd","ben_tham_gia","nguoi_tao_hd","deadline","ShowCustomer","showContent","ShowContent","TheChooseOne","Name","MST","Address","Email","Owner","dateString","order","ghost","column","PhoneOutlined","PrinterOutlined","ContactsOutlined","subTitle","defaultValue","onChange","showTime","format","onOk","formatter","replace","parser","ChooseContractTemplate","AddContractExtension","option","NewContent","ChooseOption","backgroundColor","UpdateContractExtension","openCommentSection","OpenCommentSection","ContractExtensionTable","showCreateContractExtension","showContractExtension","onOpenCreateContractExtension","viewContractExtension","newContractExtension","FileAddOutlined","ContainerOutlined","EyeOutlined","viewContract","FormOutlined","myContractExtensionReducer","contractExtension","createcontractExtension","TextArea","Input","CommentList","comments","header","itemLayout","renderItem","ContractView","handleSubmit","submitting","setTimeout","author","datetime","moment","fromNow","e","target","onFinishComment","onFinishCommenFailt","openExtension","OpenExtension","Editor","onFinishCommentFailed","rows","loading","avatar","alt","ContractTable","showCreateContract","showContract","onOpenCreateContract","newContract","ViewContractPage","UploadOutlined","myContractReducer","createCustomer","customer","AddCustomer","company","CustomerTable","CustomerSearch","CustomerList","openCustomer","OpenAddCustomer","newCustomer","myCustomerReducer","UpdateProfile","Header","showComponent","logoutAction","Logout","information","myLoginReducer","map","login","notifications","menu","LogoutOutlined","overlay","placement","trigger","count","BellOutlined","Button","SettingOutlined","username","IconFont","createFromIconfontCN","scriptUrl","SubMenu","Menu","Sider","Layout","Content","EmployeeSideMenu","toggleCollapsed","collapsed","handleClick","marginLeft","marginBottom","createElement","MenuUnfoldOutlined","MenuFoldOutlined","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","inlineCollapsed","ToolOutlined","contractManagePermision","customerManagePermission","contractTypeManagePermission","employeeManagePermission","signatureManagePermission","padding","affixed","signPermission","ContractTypeTable","EmployeeTable","ViewUser","UserList","openViewUser","newUser","myUserReducer","user","createUser","SendJoinRequest","position","ForgetPassword","middleLayout","userList","password","initialState","othersPage","LoginPage","loginInformation","responseGoogle","response","Password","valuePropName","clientId","buttonText","renderProps","GoogleOutlined","onSuccess","onFailure","cookiePolicy","addLogin","App","params","particles","line_linked","number","Boolean","window","location","hostname","match","action","pop","contractID","contractExtensionID","customerID","contractTypeID","userID","signatureID","employeeID","myReducers","combineReducers","store","createStore","allReducers","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.4b823911.chunk.js","sourcesContent":["import 'antd/dist/antd.css';\r\nimport { Table, Space,Button,Tag } from 'antd';\r\nimport TemplateUpload from './TemplateUpload';\r\nimport React from 'react';\r\nimport './Column.css'\r\nimport { createContractType, contractTypeInformation } from '../actions/ContractType'\r\nimport { connect } from 'react-redux'\r\nimport ContractTypeSearch from './ContractTypeSearch'\r\nimport { UploadOutlined, FileOutlined, DeleteOutlined,UserOutlined,FileWordOutlined } from \"@ant-design/icons\"\r\nconst { Column } = Table;\r\n\r\n\r\nconst dataSource = []\r\nfor (var i = 0; i < 1000; i++) {\r\n  if (i % 2 == 0) {\r\n    const contract = {\r\n      key: i,\r\n      contract_type: 'Hop dong lao dong',\r\n\r\n      fileName: 'template1.dot',\r\n      color: \"#fff\"\r\n    }\r\n    dataSource.push(contract)\r\n  } else {\r\n    const contract = {\r\n      key: i,\r\n      name: 'John',\r\n      contract_type: 'Hop dong lao dong',\r\n\r\n      fileName: 'template1.dot',\r\n      color: \"#ddd\"\r\n    }\r\n    dataSource.push(contract)\r\n  }\r\n\r\n\r\n}\r\nclass ContractTypeForAdmin extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      showTemplateCreate: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n  }\r\n  handleChange() {\r\n    this.setState({\r\n      showTemplateCreate: true,\r\n    })\r\n  }\r\n  componentDidMount() {\r\n\r\n    if (this.props.newContractType.length === 0) {\r\n        const contract1 = {\r\n\r\n          contract_type: 'Hop dong lao dong',\r\n\r\n          fileName: 'template1.dot',\r\n          status: \"active\"\r\n\r\n        }\r\n        const contract2 = {\r\n\r\n          contract_type: 'Hop dong lao dong',\r\n\r\n          fileName: 'template1.dot',\r\n          status: \"deactive\"\r\n\r\n        }\r\n        \r\n        this.props.onSubmit(contract1)\r\n        this.props.onSubmit(contract2)\r\n        \r\n    }\r\n\r\n}\r\n  render() {\r\n    if (this.state.showTemplateCreate) {\r\n      \r\n    } else {\r\n      return (\r\n        <div style={{height: \"100vh\"}}>\r\n          <ContractTypeSearch />\r\n          <Table dataSource={this.props.newContractType}\r\n            rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'}  >\r\n            <Column title=\"Loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" \r\n            render={(text, record) => (\r\n\r\n              <a><FileOutlined />{text}</a>\r\n\r\n          )}\r\n            />\r\n\r\n            <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\"\r\n            render={(text, record) => (\r\n\r\n              <b><FileWordOutlined />{text}</b>\r\n\r\n          )}\r\n             />\r\n            <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n              render={(text, record) => {\r\n                let color = 'pink'\r\n                if (text === 'deactive') {\r\n                  color = 'red'\r\n                } else if (text === 'active') {\r\n                  color = 'green'\r\n                } else if (text === 'pending') {\r\n                  color = 'blue'\r\n                } else if (text === 'waiting for customer') {\r\n                  color = 'pink'\r\n                } else if (text === 'rejected') {\r\n                  color = 'grey'\r\n                }\r\n                return (<Tag color={color} key={text}>\r\n                  {text.toUpperCase()}\r\n                </Tag>);\r\n              }}\r\n            />\r\n\r\n            \r\n          </Table></div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n      onSubmit: (contractType) => {\r\n          dispatch(createContractType(contractType))\r\n      }\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n  return {\r\n      newContractType: state.myContractTypeReducer\r\n  }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps) (ContractTypeForAdmin)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass UpdateProfileCompany extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin doanh nghiệp</h2>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default UpdateProfileCompany;","export const employeeInformation = () => {\r\n  return {\r\n    type: 'LIST_employee',\r\n  }\r\n}\r\nexport const createEmployee = (employee) => {\r\n  \r\n  return {\r\n    type: 'CREATE_employee',\r\n    employee\r\n  }\r\n}\r\nexport const updateEmployee = (employee) => {\r\n  return {\r\n    type: 'UPDATE_employee',\r\n    employee\r\n  }\r\n}\r\nexport const deactiveEmployee = (employeeID) => {\r\n  return {\r\n    type: 'DEACTIVE_employee',\r\n    employeeID\r\n  }\r\n}","import React from 'react';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { createEmployee, employeeInformation } from '../actions/EmployeeAction'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Input, Button,Row,Col } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass AddEmployee extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            finish: false\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        \r\n        const contract1 = {\r\n\r\n            name: 'Mike',\r\n            email: \"some email\",\r\n            address: '10 Downing Street',\r\n            status: \"active\",\r\n            role: \"secretery\"\r\n    \r\n          }\r\n          \r\n    \r\n          this.props.onSubmit(contract1)\r\n          this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    Cancel = () =>{\r\n        this.setState({\r\n            finish: true\r\n        })\r\n    }\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin nhân viên</h2>\r\n                <React.Fragment>\r\n                <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                    <Col span={10} >\r\n                        <Grid container spacing={3}>\r\n                            \r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"firstName\"\r\n                                        name=\"firstName\"\r\n                                        label=\"First name\"\r\n                                        fullWidth\r\n                                        autoComplete=\"given-name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"lastName\"\r\n                                        name=\"lastName\"\r\n                                        label=\"Last name\"\r\n                                        fullWidth\r\n                                        autoComplete=\"family-name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"address1\"\r\n                                        name=\"address1\"\r\n                                        label=\"Address line 1\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-line1\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"address2\"\r\n                                        name=\"address2\"\r\n                                        label=\"Address line 2\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-line2\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"city\"\r\n                                        name=\"city\"\r\n                                        label=\"City\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-level2\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"zip\"\r\n                                        name=\"zip\"\r\n                                        label=\"Zip / Postal code\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping postal-code\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"country\"\r\n                                        name=\"country\"\r\n                                        label=\"Country\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping country\"\r\n                                    />\r\n                                </Grid>\r\n                           \r\n                        </Grid>\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n                {/* <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form> */}\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n      onSubmit: (employee) => {\r\n        dispatch(createEmployee(employee))\r\n      }\r\n    }\r\n  }\r\n  \r\n  export default connect(null, mapDispatchToProps)(AddEmployee);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass ViewEmployee extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin nhân viên</h2>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ViewEmployee;","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Button, Space, Breadcrumb, PageHeader } from 'antd';\r\nclass EmployeeSearch extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n\r\n\r\n\r\n                <br />\r\n                <div className=\"container\">\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n\r\n                        title={[<Space size=\"large\">\r\n\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n                              \r\n                                <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n\r\n                        </Space>]}\r\n                        extra={[\r\n\r\n                            <Space size=\"large\">\r\n                                <input ref=\"searchInput\" />\r\n                                <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} />\r\n                            </Space>\r\n                        ]}\r\n                    >\r\n\r\n\r\n\r\n                    </PageHeader>\r\n\r\n                </div>\r\n\r\n            </div>);\r\n    }\r\n}\r\nexport default EmployeeSearch;","import 'antd/dist/antd.css';\r\nimport { Table, Space, Tag,Button } from 'antd';\r\nimport AddEmployee from './AddEmployee'\r\nimport ViewEmployee from './ViewEmployee'\r\nimport React from 'react';\r\nimport './Column.css'\r\nimport ReactDOM from 'react-dom';\r\nimport EmployeeSearch from './EmployeeSearch'\r\nimport { createEmployee, employeeInformation } from '../actions/EmployeeAction'\r\nimport { connect } from 'react-redux'\r\nimport { UserAddOutlined, EditOutlined, DeleteOutlined, UserOutlined } from \"@ant-design/icons\"\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\nclass EmployeeList extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n\r\n\r\n      openEmployee: \"\",\r\n\r\n    };\r\n    this.OpenAddEmployee = this.OpenAddEmployee.bind(this);\r\n    this.OpenViewEmployee = this.OpenViewEmployee.bind(this);\r\n  }\r\n  componentDidMount() {\r\n\r\n    if (this.props.newEmployee.length === 0) {\r\n      const contract1 = {\r\n\r\n        name: 'Mike',\r\n        email: \"some email\",\r\n        address: '10 Downing Street',\r\n        status: \"active\",\r\n        role: \"director\"\r\n\r\n      }\r\n      const contract2 = {\r\n\r\n        name: 'John',\r\n        email: \"some email\",\r\n        address: '10 Downing Street',\r\n        status: \"deactive\",\r\n        role: \"secrectery\"\r\n\r\n      }\r\n\r\n      this.props.onSubmit(contract1)\r\n      this.props.onSubmit(contract2)\r\n\r\n    }\r\n\r\n  }\r\n  OpenAddEmployee() {\r\n    this.setState({\r\n      openEmployee: \"openAddEmployee\",\r\n    })\r\n  }\r\n  OpenViewEmployee() {\r\n    this.setState({\r\n      openEmployee: \"openViewEmployee\",\r\n    })\r\n  }\r\n  render() {\r\n    if (this.state.openEmployee === \"openAddEmployee\") {\r\n      return (<AddEmployee />);\r\n    } else if (this.state.openEmployee === \"openViewEmployee\") {\r\n      return (<ViewEmployee />);\r\n    }\r\n    else {\r\n      return (\r\n        <div style={{height: \"100vh\"}}><Button type=\"primary\" onClick={this.OpenAddEmployee} icon={<UserAddOutlined />}>Tạo nhân viên mới</Button>\r\n          <EmployeeSearch/>\r\n          <Table dataSource={this.props.newEmployee}\r\n            rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'} >\r\n\r\n            <Column title=\"Tên\" dataIndex=\"name\" key=\"name\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"email\" dataIndex=\"email\" key=\"email\" render={(text, record) => (\r\n\r\n              <a>{text}</a>\r\n\r\n            )} />\r\n            <Column title=\"Địa chỉ\" dataIndex=\"address\" key=\"address\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n              render={(text, record) => {\r\n                let color = 'pink'\r\n                if (text === 'deactive') {\r\n                  color = 'red'\r\n                } else if (text === 'active') {\r\n                  color = 'green'\r\n                } else if (text === 'pending') {\r\n                  color = 'blue'\r\n                } else if (text === 'waiting for customer') {\r\n                  color = 'pink'\r\n                } else if (text === 'rejected') {\r\n                  color = 'grey'\r\n                }\r\n                return (<Tag color={color} key={text}>\r\n                  {text.toUpperCase()}\r\n                </Tag>);\r\n              }}\r\n            />\r\n            <Column title=\"chức vụ\" dataIndex=\"role\" key=\"role\" />\r\n            <Column\r\n              title=\"Xem chi tiết\"\r\n              key=\"action\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  <EditOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Sửa</EditOutlined>\r\n                </Space>\r\n              )}\r\n            />\r\n            <Column\r\n              title=\"Chức năng\"\r\n              dataIndex=\"status\"\r\n              key=\"status\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Vô hiệu hóa</DeleteOutlined> : null}\r\n                  {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>kích hoạt</UserOutlined> : null}\r\n                </Space>\r\n              )}\r\n            /></Table></div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSubmit: (employee) => {\r\n      dispatch(createEmployee(employee))\r\n    }\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n  return {\r\n    newEmployee: state.myEmployeeReducer\r\n  }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeList)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Select, DatePicker } from 'antd';\r\nimport { List, Avatar, Button, Skeleton, Checkbox } from 'antd';\r\nconst { Option } = Select;\r\nclass TemplateUpload extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            approvalBeforeSign: false,\r\n            approverList: [],\r\n\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.ChooseApproval = this.ChooseApproval.bind(this);\r\n\r\n    }\r\n    handleChange(value) {\r\n        console.log(value)\r\n        if (value === \"yes\") {\r\n            this.setState({\r\n                approvalBeforeSign: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                approvalBeforeSign: false,\r\n            })\r\n        }\r\n\r\n    }\r\n    ChooseApproval(value) {\r\n\r\n\r\n        this.setState({\r\n            approverList: this.state.approverList.concat(value)\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{ height: \"100vh\" }}>\r\n\r\n                <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n                <link rel=\"shortcut icon\" href=\"http://localhost:3001/favicon.ico\" />\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n                <meta name=\"theme-color\" content=\"#000000\" />\r\n                <meta name=\"description\" content=\"Web site created using create-react-app\" />\r\n                <link rel=\"apple-touch-icon\" href=\"http://localhost:3001/logo192.png\" />\r\n                <title>PDF Signaturer</title>\r\n                <style\r\n                    data-styled\r\n                    data-styled-version=\"4.4.0\"\r\n                    dangerouslySetInnerHTML={{\r\n                        __html:\r\n                            \"\\n/* sc-component-id: sc-bdVaJa */\\n.ftKihC{padding-top:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;} .ftKihC canvas{border:3px solid #eee;border-radius:4px;background:white;width:100%;height:100%;padding:3px;} .ftKihC div{padding:10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;} .ftKihC div button{background:#1a82cc;border:0;padding:15px;margin-left:10px;border-radius:4px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\\n/* sc-component-id: sc-bwzfXH */\\n.bzSLKe{padding-top:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;} .bzSLKe iframe{border:3px solid #eee;border-radius:4px;background:white;width:100%;height:100%;min-height:500px;padding:3px;}\\n/* sc-component-id: sc-htpNat */\\n.hpgyVh[disabled]{cursor:not-allowed;opacity:0.6;}\\n/* sc-component-id: sc-bxivhb */\\n.cDZPnc{max-width:700px;background:#fff;border-radius:4px;box-shadow:0 0 20px rgba(0,0,0,0.1);padding:30px;margin:80px auto;} .cDZPnc h1{font-size:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;} .cDZPnc h1 svg{margin-right:10px;} .cDZPnc h1 input{-webkit-flex:1;-ms-flex:1;flex:1;border:3px solid #eee;margin-left:10%;padding:10px 15px;border-radius:4px;font-size:16px;}\\n/* sc-component-id: sc-global-3878584262 */\\n*{margin:0;padding:0;outline:0;box-sizing:border-box;} html,body,#root{min-height:100%;} body{background:#1A82CC;-webkit-font-smoothing:antialiased !important;} body,input,button{color:#222;font-size:14px;font-family:Arial,Helvetica,sans-serif;} button{cursor:pointer;}\"\r\n                    }}\r\n                />\r\n                <noscript>You need to enable JavaScript to run this app.</noscript>\r\n                <div id=\"\">\r\n                    <div className=\"sc-bxivhb cDZPnc\">\r\n                        <h1>\r\n                            <svg\r\n                                stroke=\"currentColor\"\r\n                                fill=\"currentColor\"\r\n                                strokeWidth={0}\r\n                                viewBox=\"0 0 576 512\"\r\n                                height=\"1em\"\r\n                                width=\"1em\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path d=\"M218.17 424.14c-2.95-5.92-8.09-6.52-10.17-6.52s-7.22.59-10.02 6.19l-7.67 15.34c-6.37 12.78-25.03 11.37-29.48-2.09L144 386.59l-10.61 31.88c-5.89 17.66-22.38 29.53-41 29.53H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h12.39c4.83 0 9.11-3.08 10.64-7.66l18.19-54.64c3.3-9.81 12.44-16.41 22.78-16.41s19.48 6.59 22.77 16.41l13.88 41.64c19.75-16.19 54.06-9.7 66 14.16 1.89 3.78 5.49 5.95 9.36 6.26v-82.12l128-127.09V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24v-40l-128-.11c-16.12-.31-30.58-9.28-37.83-23.75zM384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1zm-96 225.06V416h68.99l161.68-162.78-67.88-67.88L288 346.96zm280.54-179.63l-31.87-31.87c-9.94-9.94-26.07-9.94-36.01 0l-27.25 27.25 67.88 67.88 27.25-27.25c9.95-9.94 9.95-26.07 0-36.01z\" />\r\n                            </svg>\r\n            DOT template\r\n            <input type=\"file\" />\r\n                        </h1>\r\n                        <div className=\"sc-bwzfXH bzSLKe\">\r\n                            <iframe\r\n                                title=\"pdframe\"\r\n                                src=\"\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"sc-bdVaJa ftKihC\">\r\n\r\n                            <div>\r\n                                <Button type=\"primary\" >\r\n                                    Nộp\r\n                            </Button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default TemplateUpload","export const contractTypeInformation = () => {\r\n    return {\r\n      type: 'LIST_contractType',\r\n    }\r\n  }\r\n  export const createContractType = (contractType) => {\r\n    \r\n    return {\r\n      type: 'CREATE_contractType',\r\n      contractType\r\n    }\r\n  }\r\n  export const updateContractType = (contractType) => {\r\n    return {\r\n      type: 'UPDATE_contractType',\r\n      contractType\r\n    }\r\n  }\r\n  export const deactiveContractType = (contractTypeID) => {\r\n    return {\r\n      type: 'DEACTIVE_contractType',\r\n      contractTypeID\r\n    }\r\n  }","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Button, Space, Breadcrumb, PageHeader } from 'antd';\r\nclass ContractTypeSearch extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n\r\n\r\n\r\n                <br />\r\n                <div className=\"container\">\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n\r\n                        title={[<Space size=\"large\">\r\n\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n                              \r\n                                <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n\r\n                        </Space>]}\r\n                        extra={[\r\n\r\n                            <Space size=\"large\">\r\n                                <input ref=\"searchInput\" />\r\n                                <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} />\r\n                            </Space>\r\n                        ]}\r\n                    >\r\n\r\n\r\n\r\n                    </PageHeader>\r\n\r\n                </div>\r\n\r\n            </div>);\r\n    }\r\n}\r\nexport default ContractTypeSearch;","export const signatureInformation = () => {\r\n  return {\r\n    type: 'LIST_signature',\r\n  }\r\n}\r\nexport const createSignature = (signature) => {\r\n  \r\n  return {\r\n    type: 'CREATE_signature',\r\n    signature\r\n  }\r\n}\r\nexport const updateSignature = (signature) => {\r\n  return {\r\n    type: 'UPDATE_signature',\r\n    signature\r\n  }\r\n}\r\nexport const deactiveSignature = (signatureID) => {\r\n  return {\r\n    type: 'DEACTIVE_signature',\r\n    signatureID\r\n  }\r\n}","import React from 'react';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { createSignature, signatureInformation } from '../actions/SignatureAction'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Input, Button,Row,Col } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass AddSignature extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            finish: false\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        const contract1 = {\r\n\r\n            name: 'Mike',\r\n            email: \"some email\",\r\n            provider: 'Viettel',\r\n            status: \"active\",\r\n            expired: 2022\r\n\r\n        }\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n        this.props.onSubmit(contract1)\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    Cancel = () =>{\r\n        this.setState({\r\n            finish: true\r\n        })\r\n    }\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin chữ ký</h2>\r\n                <React.Fragment>\r\n                <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                    <Col span={10} >\r\n                        <Grid container spacing={3}>\r\n                            \r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"holder\"\r\n                                        name=\"Tên người giữ\"\r\n                                        label=\"Tên người giữ\"\r\n                                        fullWidth\r\n                                        autoComplete=\"given-name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"serial\"\r\n                                        name=\"số serial\"\r\n                                        label=\"số serial\"\r\n                                        fullWidth\r\n                                        autoComplete=\"number\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"address1\"\r\n                                        name=\"address1\"\r\n                                        label=\"Address line 1\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-line1\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"expiredDate\"\r\n                                        name=\"Ngày hết hạn\"\r\n                                        label=\"Ngày hết hạn\"\r\n                                        fullWidth\r\n                                        autoComplete=\"date\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"provider\"\r\n                                        name=\"nhà cung cấp chữ ký\"\r\n                                        label=\"nhà cung cấp chữ ký\"\r\n                                        fullWidth\r\n                                        autoComplete=\"nhà cung cấp chữ ký\"\r\n                                    />\r\n                                </Grid>\r\n                                \r\n                           \r\n                        </Grid>\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n                {/* <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form> */}\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (signature) => {\r\n            dispatch(createSignature(signature))\r\n        }\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps) (AddSignature);","import React from 'react';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass UpdateSignature extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        \r\n            return (\r\n                <div style={{\r\n                    margin: \"auto\",\r\n                    width: \"1000px\",\r\n                    paddingLeft:\"50px\",\r\n                    border:\"solid\"\r\n                }\r\n                }>\r\n                    <h2 style={{ textAlign: 'center' }}>Thông tin chữ ký</h2>\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"basic\"\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        labelAlign=\"left\"\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                    ><br />\r\n                        <Form.Item\r\n                            label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                            name=\"companyname\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập tên doanh nghiệp',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n    \r\n                        <Form.Item\r\n                            label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                            name=\"email\"\r\n                            requiredMark=\"false\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Địa chỉ email',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                            name=\"taxcode\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Mã số thuế',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                            name=\"address\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Địa chỉ',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n    \r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                <CloudUploadOutlined /> Nộp\r\n                                </Button>\r\n                            <Button type=\"primary\" style={{\r\n                                margin: '0 8px',\r\n                            }} htmlType=\"button\">\r\n                                <RedoOutlined />    Reset\r\n                                </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div >\r\n            );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default UpdateSignature;","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Button, Space, Breadcrumb, PageHeader } from 'antd';\r\nclass SignatureSearch extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n\r\n\r\n\r\n                <br />\r\n                <div className=\"container\">\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n\r\n                        title={[<Space size=\"large\">\r\n\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n                              \r\n                                <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n\r\n                        </Space>]}\r\n                        extra={[\r\n\r\n                            <Space size=\"large\">\r\n                                <input ref=\"searchInput\" />\r\n                                <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} />\r\n                            </Space>\r\n                        ]}\r\n                    >\r\n\r\n\r\n\r\n                    </PageHeader>\r\n\r\n                </div>\r\n\r\n            </div>);\r\n    }\r\n}\r\nexport default SignatureSearch;","import 'antd/dist/antd.css';\r\nimport { Table, Space,Button,Tag } from 'antd';\r\nimport AddSignature from './AddSignature'\r\nimport UpdateSignature from './UpdateSignature'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SignatureSearch from './SignatureSearch'\r\nimport { createSignature, signatureInformation } from '../actions/SignatureAction'\r\nimport { connect } from 'react-redux'\r\nimport { UserAddOutlined, EditOutlined, DeleteOutlined, UserOutlined } from \"@ant-design/icons\"\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\nclass SignatureList extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            dataSource: [\r\n                {\r\n                    key: '1',\r\n                    name: 'Mike',\r\n                    email: \"some email\",\r\n                    provider: '10 Downing Street',\r\n                    status: \"active\",\r\n                    expired: 2022\r\n                },\r\n                {\r\n                    key: '2',\r\n                    name: 'John',\r\n                    email: \"some email\",\r\n                    provider: '10 Downing Street',\r\n                    status: \"active\",\r\n                    expired: 2022\r\n                },\r\n            ],\r\n            openEmployee: \"\",\r\n\r\n        };\r\n        this.OpenAddEmployee = this.OpenAddEmployee.bind(this);\r\n        this.OpenViewEmployee = this.OpenViewEmployee.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        if (this.props.newSignature.length === 0) {\r\n            const contract1 = {\r\n\r\n                name: 'Mike',\r\n                email: \"some email\",\r\n                provider: 'Viettel',\r\n                status: \"active\",\r\n                expired: 2022\r\n\r\n            }\r\n            const contract2 = {\r\n\r\n                name: 'John',\r\n                email: \"some email\",\r\n                provider: 'Fpt',\r\n                status: \"deactive\",\r\n                expired: 2022\r\n\r\n            }\r\n\r\n            this.props.onSubmit(contract1)\r\n            this.props.onSubmit(contract2)\r\n\r\n        }\r\n\r\n    }\r\n    OpenAddEmployee() {\r\n        this.setState({\r\n            openEmployee: \"openAddEmployee\",\r\n        })\r\n    }\r\n    OpenViewEmployee() {\r\n        this.setState({\r\n            openEmployee: \"openViewEmployee\",\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.openEmployee === \"openAddEmployee\") {\r\n\r\n            return (<AddSignature />);\r\n        } else if (this.state.openEmployee === \"openViewEmployee\") {\r\n            return (<UpdateSignature />);\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{height: \"100vh\"}}><Button type=\"primary\" onClick={this.OpenAddEmployee} icon={<UserAddOutlined />}>Thêm chữ ký mới</Button>\r\n                    <SignatureSearch/>\r\n                    <Table dataSource={this.props.newSignature}\r\n                        rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'} >\r\n\r\n                        <Column title=\"Tên người sử dụng\" dataIndex=\"name\" key=\"name\" />\r\n\r\n                        <Column title=\"Nhà cung cấp\" dataIndex=\"provider\" key=\"provider\" />\r\n\r\n                        <Column title=\"Ngày hết hạn\" dataIndex=\"expired\" key=\"expired\" />\r\n                        <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n                            render={(text, record) => {\r\n                                let color = 'pink'\r\n                                if (text === 'deactive') {\r\n                                    color = 'red'\r\n                                } else if (text === 'active') {\r\n                                    color = 'green'\r\n                                } else if (text === 'pending') {\r\n                                    color = 'blue'\r\n                                } else if (text === 'waiting for customer') {\r\n                                    color = 'pink'\r\n                                } else if (text === 'rejected') {\r\n                                    color = 'grey'\r\n                                }\r\n                                return (<Tag color={color} key={text}>\r\n                                    {text.toUpperCase()}\r\n                                </Tag>);\r\n                            }}\r\n                        />\r\n\r\n                        <Column\r\n                            title=\"Xem chi tiết\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n                                <Space size=\"middle\">\r\n                                    <EditOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Sửa</EditOutlined>\r\n                                </Space>\r\n                            )}\r\n                        />\r\n                        <Column\r\n                            title=\"Chức năng\"\r\n                            dataIndex=\"status\"\r\n                            key=\"status\"\r\n                            render={(text, record) => (\r\n                                <Space size=\"middle\">\r\n                                    {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Vô hiệu hóa</DeleteOutlined> : null}\r\n                                    {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>kích hoạt</UserOutlined> : null}\r\n                                </Space>\r\n                            )}\r\n                        /></Table></div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (signature) => {\r\n            dispatch(createSignature(signature))\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        newSignature: state.mySignatureReducer\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignatureList)","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Button, Space, Breadcrumb, PageHeader } from 'antd';\r\nclass ContractSearch extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n\r\n\r\n\r\n                <br />\r\n                <div className=\"container\">\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n\r\n                        title={[<Space size=\"large\">\r\n\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>\r\n                                    đang duyệt\r\n                            </Breadcrumb.Item>\r\n                                <Breadcrumb.Item>\r\n                                    đang chờ ký\r\n                            </Breadcrumb.Item>\r\n                                <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n\r\n                        </Space>]}\r\n                        extra={[\r\n\r\n                            <Space size=\"large\">\r\n                                <input ref=\"searchInput\" />\r\n                                <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} />\r\n                            </Space>\r\n                        ]}\r\n                    >\r\n\r\n\r\n\r\n                    </PageHeader>\r\n\r\n                </div>\r\n\r\n            </div>);\r\n    }\r\n}\r\nexport default ContractSearch;","export const contractInformation = () => {\r\n  return {\r\n    type: 'LIST_contract',\r\n  }\r\n}\r\nexport const createContract = (contract) => {\r\n  \r\n  return {\r\n    type: 'CREATE_contract',\r\n    contract\r\n  }\r\n}\r\nexport const updateContract = (contract) => {\r\n  return {\r\n    type: 'UPDATE_contract',\r\n    contract\r\n  }\r\n}\r\nexport const deactiveContract = (contractID) => {\r\n  return {\r\n    type: 'DEACTIVE_contract',\r\n    contractID\r\n  }\r\n}","import React from 'react';\r\nimport { createContract, contractInformation, } from '../actions/ContractAction'\r\nimport { Select, DatePicker, Descriptions, Space, Button, InputNumber, Form, PageHeader, Input, Row, Col } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport ContractTable from './ContractTable'\r\nimport {\r\n    FileExcelOutlined, IdcardOutlined, BankOutlined, PhoneOutlined, PrinterOutlined, HomeOutlined, MailOutlined\r\n    , ContactsOutlined, CalendarOutlined, DollarOutlined, CloudDownloadOutlined, CloudUploadOutlined, AuditOutlined\r\n} from '@ant-design/icons';\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\n\r\nclass CreateContract extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            TheChooseOne: {\r\n                Name: \"\",\r\n                MST: \"\",\r\n                Address: \"\",\r\n                Email: \"\",\r\n                Owner: \"\",\r\n            },\r\n            finish: false,\r\n            showContent: \"customer\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    onFinish = (values) => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n        const contract = {\r\n\r\n            contract_name: 'Hop dong lao dong',\r\n            status: \"pending\",\r\n            ben_tao_hd: 'HiSign',\r\n            ben_tham_gia: 'cty 369',\r\n            nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n            deadline: \"12/12/2022\",\r\n\r\n        }\r\n        this.props.onSubmit(contract)\r\n\r\n    };\r\n    Cancel = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n\r\n\r\n    };\r\n    ShowCustomer = () => {\r\n        this.setState({\r\n            showContent: \"customer\"\r\n        })\r\n    };\r\n    ShowContent = () => {\r\n        this.setState({\r\n            showContent: \"content\"\r\n        })\r\n    };\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    handleChange(value) {\r\n        this.setState({\r\n            TheChooseOne: {\r\n                Name: \"Company name here\",\r\n                MST: \"Tax code here\",\r\n                Address: \"address here\",\r\n                Email: \"email here\",\r\n                Owner: \"owner here\",\r\n            },\r\n        })\r\n    }\r\n    log = (type) => console.log.bind(console, type);\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    render() {\r\n\r\n        if (this.state.finish) {\r\n            return (<ContractTable role={this.props.role} />);\r\n        } else {\r\n\r\n\r\n            return (\r\n\r\n                <div style={{ border: \"solid\",height: \"100vh\" }}>\r\n                     <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n\r\n                    <h2 style={{ textAlign: 'center' }}>Hợp đồng <Input></Input></h2>\r\n                    <Row>\r\n                        <Col span={3} order={1} />\r\n                        <Col span={20} order={2}>\r\n                            <PageHeader\r\n                                className=\"site-page-header\"\r\n                                ghost={false}\r\n                                title=\"Thông tin bên A\">\r\n                                <Descriptions size=\"small\" column={2} >\r\n                                    <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                    <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                        Usada Pekora\r\n                        </Descriptions.Item>\r\n\r\n\r\n                                </Descriptions>\r\n                            </PageHeader>\r\n\r\n\r\n                            <PageHeader\r\n                                className=\"site-page-header\"\r\n                                ghost={false}\r\n                                title=\"Thông tin bên B\"\r\n                                subTitle={[<Select defaultValue=\"NO\" onChange={this.handleChange}>\r\n                                    <Option value=\"NO\">Please select your customer</Option>\r\n                                    <Option value=\"PR001\">Usada construction</Option>\r\n                                    <Option value=\"PR002\">Anukin corp</Option>\r\n                                    <Option value=\"PR003\">The circus</Option>\r\n                                </Select>]}\r\n                                extra={[<Button type=\"primary\" onClick={this.ShowCustomer}>Thông tin bên B</Button>,\r\n                                <Button type=\"primary\" onClick={this.ShowContent}>Thông tin hợp đồng</Button>\r\n                                ]}\r\n                            >\r\n                                {this.state.showContent === \"customer\" ?\r\n                                    <Descriptions title=\"\" size=\"small\" column={2}  >\r\n\r\n                                        <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                        <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                        <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                        <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                        <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                        <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                        <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                            Usada Pekora\r\n                        </Descriptions.Item>\r\n\r\n\r\n                                    </Descriptions> : null}\r\n                                {this.state.showContent === \"content\" ?\r\n                                    <Form\r\n\r\n                                        name=\"basic\"\r\n                                        className=\"lcontract-form\"\r\n\r\n                                        onFinish={this.onFinish}\r\n                                        onFinishFailed={this.onFinishFailed}\r\n\r\n                                    >\r\n                                        <Descriptions title=\"Nội dung hợp đồng\" size=\"small\" column={1}   >\r\n                                            <Descriptions.Item label=\"thời hạn hợp đồng\"> <RangePicker\r\n                                                showTime={{ format: 'HH:mm' }}\r\n                                                format=\"YYYY-MM-DD HH:mm\"\r\n                                                onChange={this.onChange}\r\n                                                onOk={this.onOk}\r\n                                            /></Descriptions.Item>\r\n                                            <Descriptions.Item label=\"Giá trị:\">\r\n                                                <Form.Item\r\n\r\n                                                    name=\"value\"\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Vui lòng nhập Giá trị:',\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <InputNumber\r\n                                                        \r\n                                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                    />\r\n                                                </Form.Item>\r\n\r\n                                            </Descriptions.Item>\r\n                                            <a>Dieu khoan 1:</a><br />\r\n                                            <a>Dieu khoan 2:</a><br />\r\n                                            <a>Dieu khoan 3:</a><br />\r\n                                            <a>Dieu khoan 4:</a><br />\r\n                                            \r\n                                        </Descriptions>\r\n\r\n                                        <Space size=\"large\">\r\n                                            <Button type=\"primary\" value=\"submit\" htmlType=\"submit\">\r\n                                                Nộp\r\n                  </Button>\r\n                                        </Space>\r\n                                    </Form> : null}\r\n                            </PageHeader>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                   \r\n                </div>\r\n\r\n\r\n\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (contract) => {\r\n            dispatch(createContract(contract))\r\n        }\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(CreateContract);","import 'antd/dist/antd.css';\r\nimport { Table,Space,Button,PageHeader } from 'antd';\r\nimport CreateContract from './CreateContract';\r\nimport React from 'react';\r\nimport ContractTypeSearch from './ContractTypeSearch'\r\nimport {UserAddOutlined,SearchOutlined ,FileOutlined} from \"@ant-design/icons\"\r\nconst { Column } = Table;\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        contract_type: 'Hop dong lao dong',\r\n\r\n        fileName: 'template1.dot',\r\n    },\r\n    {\r\n        key: '2',\r\n        contract_type: 'Hop dong lao dong',\r\n\r\n        fileName: 'template1.dot',\r\n    },\r\n];\r\n\r\n\r\nclass ChooseContractTemplate extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showTemplateCreate: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    handleChange() {\r\n        this.setState({\r\n            showTemplateCreate: true,\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.showTemplateCreate) {\r\n            return (\r\n\r\n                <CreateContract role={this.props.role} />\r\n            );\r\n        } else {\r\n            return (\r\n                <div style={{height: \"100vh\"}}>\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n\r\n                        title={[]}\r\n                        extra={[\r\n\r\n                            <Space size=\"large\">\r\n                                <input ref=\"searchInput\" />\r\n                                <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} />\r\n                            </Space>\r\n                        ]}\r\n                    >\r\n\r\n\r\n\r\n                    </PageHeader>\r\n                    <Table dataSource={dataSource} >\r\n                        <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                        <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                        <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n                        \r\n\r\n                        <Column\r\n                            title=\"Chọn hợp đồng\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n                                <Space size=\"middle\">\r\n                                    <Button type=\"primary\" icon={<FileOutlined/>} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                </Space>\r\n                            )}\r\n                        />\r\n                    </Table></div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\nexport default ChooseContractTemplate","import React from 'react';\r\nimport { UserAddOutlined, SearchOutlined, FileOutlined } from \"@ant-design/icons\"\r\nimport { Select, DatePicker, Descriptions, Space, Button, InputNumber, Table, PageHeader, Row, Col } from 'antd';\r\nimport ContractExtensionTable from './ContractExtensionTable'\r\nconst { Column } = Table;\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        contract_type: 'Hop dong lao dong',\r\n\r\n        fileName: 'template1.dot',\r\n    },\r\n    {\r\n        key: '2',\r\n        contract_type: 'Hop dong lao dong',\r\n\r\n        fileName: 'template1.dot',\r\n    },\r\n];\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\n\r\nclass AddContractExtension extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            option: \"DeadLineExtend\",\r\n            NewContent: \"\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.ChooseOption = this.ChooseOption.bind(this);\r\n\r\n    }\r\n    handleChange(value) {\r\n        this.setState({\r\n            NewContent: \"NewContent\"\r\n        })\r\n    }\r\n    Cancel = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n\r\n\r\n    };\r\n    log = (type) => console.log.bind(console, type);\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    ChooseOption(value) {\r\n\r\n        this.setState({\r\n            option: value\r\n        })\r\n        if (value === \"DeadLineExtend\") {\r\n            this.setState({\r\n                NewContent: \"\"\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.finish) {\r\n            return (<ContractExtensionTable role={this.props.role} />);\r\n        } else {\r\n            return (\r\n                <div style={{ border: \"solid\", backgroundColor: \"white\",height: \"100vh\" }} >\r\n                    <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n\r\n                    <h2 style={{ textAlign: 'center' }}>phụ lục hợp đồng</h2>\r\n                    <Row>\r\n                        <Col span={3} order={1} />\r\n                        <Col span={20} order={2}>\r\n                            <div id=\"approver\">Lý do tạo:\r\n\r\n                        <Select defaultValue={this.state.option} style={{ width: 200 }}\r\n                                    onChange={this.ChooseOption}>\r\n                                    <Option value=\"DeadLineExtend\">Gia hạn hợp đồng</Option>\r\n                                    <Option value=\"ChangePolicy\">Thay đổi Giá trị</Option>{/*khi chọn cái này thì cái RangePicker sẽ hide và show cái table để chọn template*/}\r\n                                    <Option value=\"Both\">Cả hai</Option>{/*khi chọn cái này thì cái này show cái table để chọn template*/}\r\n                                </Select>\r\n                            </div>\r\n                            <Descriptions title=\"Noi dung thay doi\" size=\"small\" column={1} >\r\n                                {this.state.option === \"DeadLineExtend\" ? <Descriptions.Item><RangePicker\r\n                                    showTime={{ format: 'HH:mm' }}\r\n                                    format=\"YYYY-MM-DD HH:mm\"\r\n                                    onChange={this.onChange}\r\n                                    onOk={this.onOk}\r\n                                /></Descriptions.Item> : null}\r\n                                {this.state.option === \"ChangePolicy\" ? <Descriptions.Item><Table dataSource={dataSource} >\r\n                                    <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                                    <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                                    <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n\r\n\r\n                                    <Column\r\n                                        title=\"Chọn hợp đồng\"\r\n                                        key=\"action\"\r\n                                        render={(text, record) => (\r\n                                            <Space size=\"middle\">\r\n                                                <Button type=\"primary\" icon={<FileOutlined />} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                            </Space>\r\n                                        )}\r\n                                    />\r\n                                </Table> </Descriptions.Item> : null}\r\n                                {this.state.option === \"Both\" ? <Descriptions.Item> <RangePicker\r\n                                    showTime={{ format: 'HH:mm' }}\r\n                                    format=\"YYYY-MM-DD HH:mm\"\r\n                                    onChange={this.onChange}\r\n                                    onOk={this.onOk}\r\n                                /></Descriptions.Item> : null}\r\n                                {this.state.option === \"Both\" ? <Descriptions.Item> <Table dataSource={dataSource} >\r\n                                    <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                                    <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                                    <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n\r\n\r\n                                    <Column\r\n                                        title=\"Chọn hợp đồng\"\r\n                                        key=\"action\"\r\n                                        render={(text, record) => (\r\n                                            <Space size=\"middle\">\r\n                                                <Button type=\"primary\" icon={<FileOutlined />} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                            </Space>\r\n                                        )}\r\n                                    />\r\n                                </Table> </Descriptions.Item> : null}\r\n                                {this.state.NewContent === \"NewContent\" ? <>\r\n                                    <Descriptions.Item label=\"Điều khoản:\">\r\n                                        <a>Dieu khoan 1:</a><br />\r\n                                        <a>Dieu khoan 2:</a><br />\r\n                                        <a>Dieu khoan 3:</a><br />\r\n                                        <a>Dieu khoan 4:</a><br />\r\n                                    </Descriptions.Item>\r\n                                    <Descriptions.Item label=\"Giá trị:\">\r\n                                        <InputNumber\r\n                                            defaultValue={1000}\r\n                                            formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                        />\r\n                                    </Descriptions.Item></> : null}\r\n\r\n\r\n\r\n                            </Descriptions>\r\n                            <Space size=\"large\">\r\n                                <Button type=\"primary\" value=\"Signed\">\r\n                                    Lưu\r\n                        </Button>\r\n\r\n\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default AddContractExtension","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { UserAddOutlined, SearchOutlined, FileOutlined } from \"@ant-design/icons\"\r\nimport ContractExtensionTable from './ContractExtensionTable'\r\nimport { Select, DatePicker, Descriptions, Space, Button, Row, Col, Table, InputNumber } from 'antd';\r\nconst { Column } = Table;\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\n\r\nclass UpdateContractExtension extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            openCommentSection: false,\r\n            finish: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.OpenCommentSection = this.OpenCommentSection.bind(this)\r\n    }\r\n    handleChange(value) {\r\n        console.log(`selected ${value}`);\r\n    }\r\n    log = (type) => console.log.bind(console, type);\r\n    onChange(value, dateString) {\r\n        console.log('Selected Time: ', value);\r\n        console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n\r\n    onOk(value) {\r\n        console.log('onOk: ', value);\r\n    }\r\n    OpenCommentSection() {\r\n        this.setState({\r\n            openCommentSection: true\r\n        })\r\n    }\r\n    onFinish = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n    };\r\n    render() {\r\n\r\n\r\n\r\n        if (this.state.finish) {\r\n            return (<ContractExtensionTable role={this.props.role} />);\r\n        } else {\r\n\r\n            return (\r\n\r\n                <div style={{ border: \"solid\",height: \"100vh\" }} >\r\n                    <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n\r\n                    <h2 style={{ textAlign: 'center' }}>phụ lục hợp đồng</h2>\r\n                    <Row>\r\n                        <Col span={3} order={1} />\r\n                        <Col span={20} order={2}>\r\n                            <div id=\"approver\">Lý do tạo:\r\n\r\n                        {/* <Select defaultValue={this.state.option} style={{ width: 200 }}\r\n                                onChange={this.ChooseOption}>\r\n                                <Option value=\"DeadLineExtend\">Gia hạn hợp đồng</Option>\r\n                                <Option value=\"ChangePolicy\">Thay đổi Giá trị</Option>\r\n                                <Option value=\"Both\">Cả hai</Option>\r\n                            </Select> */}\r\n                            </div>\r\n                            <Descriptions title=\"Noi dung thay doi\" size=\"small\" column={1} >\r\n                                <Descriptions.Item><RangePicker\r\n                                    showTime={{ format: 'HH:mm' }}\r\n                                    format=\"YYYY-MM-DD HH:mm\"\r\n                                    onChange={this.onChange}\r\n                                    onOk={this.onOk}\r\n                                /></Descriptions.Item>\r\n                                <Descriptions.Item label=\"Điều khoản:\">\r\n                                    <a>Dieu khoan 1:</a><br />\r\n                                    <a>Dieu khoan 2:</a><br />\r\n                                    <a>Dieu khoan 3:</a><br />\r\n                                    <a>Dieu khoan 4:</a><br />\r\n                                </Descriptions.Item>\r\n                                <Descriptions.Item label=\"Giá trị:\">\r\n\r\n                                    <InputNumber\r\n                                        defaultValue={1000}\r\n                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                    />\r\n                                </Descriptions.Item>\r\n                                {/* {this.state.option === \"DeadLineExtend\" ? <Descriptions.Item><RangePicker\r\n                                showTime={{ format: 'HH:mm' }}\r\n                                format=\"YYYY-MM-DD HH:mm\"\r\n                                onChange={this.onChange}\r\n                                onOk={this.onOk}\r\n                            /></Descriptions.Item> : null} */}\r\n                                {/* {this.state.option === \"ChangePolicy\" ? <Descriptions.Item><Table dataSource={dataSource} >\r\n                                <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                                <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                                <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n\r\n\r\n                                <Column\r\n                                    title=\"Chọn hợp đồng\"\r\n                                    key=\"action\"\r\n                                    render={(text, record) => (\r\n                                        <Space size=\"middle\">\r\n                                            <Button type=\"primary\" icon={<FileOutlined />} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                        </Space>\r\n                                    )}\r\n                                />\r\n                            </Table> </Descriptions.Item> : null} */}\r\n                                {/* {this.state.option === \"Both\" ? <Descriptions.Item> <RangePicker\r\n                                showTime={{ format: 'HH:mm' }}\r\n                                format=\"YYYY-MM-DD HH:mm\"\r\n                                onChange={this.onChange}\r\n                                onOk={this.onOk}\r\n                            /></Descriptions.Item> : null} */}\r\n                                {/* {this.state.option === \"Both\" ? <Descriptions.Item> <Table dataSource={dataSource} >\r\n                                <Column title=\"loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" />\r\n                                <Column title=\"khóa\" dataIndex=\"key\" key=\"key\" />\r\n                                <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\" />\r\n\r\n\r\n                                <Column\r\n                                    title=\"Chọn hợp đồng\"\r\n                                    key=\"action\"\r\n                                    render={(text, record) => (\r\n                                        <Space size=\"middle\">\r\n                                            <Button type=\"primary\" icon={<FileOutlined />} onClick={this.handleChange}>Tạo hợp đồng với mẫu này</Button>\r\n                                        </Space>\r\n                                    )}\r\n                                />\r\n                            </Table> </Descriptions.Item> : null} */}\r\n                                {/* {this.state.NewContent === \"NewContent\" ?\r\n                                <Descriptions.Item label=\"Gia tri:\">\r\n                                    <a>Dieu khoan 1:</a><br />\r\n                                    <a>Dieu khoan 2:</a><br />\r\n                                    <a>Dieu khoan 3:</a><br />\r\n                                    <a>Dieu khoan 4:</a><br />\r\n                                    <InputNumber\r\n                                        defaultValue={1000}\r\n                                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                    />\r\n                                </Descriptions.Item> : null} */}\r\n\r\n\r\n\r\n                            </Descriptions>\r\n                            <Space size=\"large\">\r\n                                {/* <Button type=\"primary\" value=\"Signed\">\r\n                                Lưu\r\n                        </Button> */}\r\n                                <Space size=\"large\">\r\n\r\n                                    {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Sign\" onClick={this.onFinish}>{/*Nút này xuất hiện khi chưa ai kí hợp đồng nhưng chỉ có director mới thấy*/}\r\n    Kí\r\n</Button> : null}\r\n                                    {this.props.contract.status == \"pending\" ? <Button onClick={this.OpenCommentSection} type=\"primary\" value=\"Update request\">{/*Nút này xuất hiện khi chưa ai kí hợp đồng nhưng chỉ có director mới thấy*/}\r\n    Yêu cầu sửa\r\n</Button> : null}\r\n                                    {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Edit\">{/*Nút này xuất hiện khi chưa ai kí hợp đồng*/}\r\n        Sửa\r\n</Button> : null}\r\n\r\n                                </Space>\r\n\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateContractExtension","import 'antd/dist/antd.css';\r\nimport { Table, Button,Tag } from 'antd';\r\nimport ContractSearch from './ContractSearch'\r\nimport { EyeOutlined,DeleteOutlined, FormOutlined, FileAddOutlined,ContainerOutlined } from \"@ant-design/icons\"\r\nimport AddContractExtension from './AddContractExtension'\r\nimport UpdateContractExtension from './UpdateContractExtension'\r\nimport React from 'react';\r\nimport { createcontractExtension, contractExtensionInformation } from '../actions/ContractExtension'\r\nimport { connect } from 'react-redux'\r\nconst { Column } = Table;\r\n\r\n\r\nclass ContractExtensionTable extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showCreateContractExtension: false,\r\n            showContractExtension: false,\r\n            contract :{},\r\n            \r\n        };\r\n\r\n        this.onOpenCreateContractExtension = this.onOpenCreateContractExtension.bind(this);\r\n        this.viewContractExtension = this.viewContractExtension.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        if (this.props.newContractExtension.length === 0) {\r\n            const contract1 = {\r\n\r\n                contract_type: 'Hop dong lao dong',\r\n                    status: \"active\",\r\n                    ben_tao_hd: 'HiSign',\r\n                    ben_tham_gia: 'cty 369',\r\n                    nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                    deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract2 = {\r\n\r\n                contract_type: 'Hop dong lao dong',\r\n                    status: \"deactive\",\r\n                    ben_tao_hd: 'HiSign',\r\n                    ben_tham_gia: 'cty 369',\r\n                    nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                    deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract3 = {\r\n\r\n                contract_type: 'Hop dong lao dong',\r\n                    status: \"pending\",\r\n                    ben_tao_hd: 'HiSign',\r\n                    ben_tham_gia: 'cty 369',\r\n                    nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                    deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract4 = {\r\n\r\n                contract_type: 'Hop dong lao dong',\r\n                    status: \"waiting for customer\",\r\n                    ben_tao_hd: 'HiSign',\r\n                    ben_tham_gia: 'cty 369',\r\n                    nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                    deadline: \"12/12/2022\",\r\n\r\n            }\r\n            this.props.onSubmit(contract1)\r\n            this.props.onSubmit(contract2)\r\n            this.props.onSubmit(contract3)\r\n            this.props.onSubmit(contract4)\r\n        }\r\n\r\n    }\r\n    onOpenCreateContractExtension() {\r\n        this.setState({\r\n            showCreateContractExtension: true\r\n        })\r\n\r\n    }\r\n    viewContractExtension() {\r\n        this.setState({\r\n            showContractExtension: true\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.showCreateContractExtension) {\r\n            return (\r\n                <AddContractExtension role={this.props.role} />\r\n\r\n            );\r\n        } else if (this.state.showContractExtension) {\r\n            return (\r\n                <UpdateContractExtension contract={this.state.contract} role={this.props.role} />\r\n\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{height: \"100vh\"}}><Button type=\"primary\" icon={<FileAddOutlined />} onClick={this.onOpenCreateContractExtension}>Tạo phụ lục</Button>\r\n                    <ContractSearch />\r\n                    <Table dataSource={this.props.newContractExtension}\r\n                        rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'}>\r\n                        <Column title=\"tên phụ lục\" dataIndex=\"contract_type\" key=\"contract_type\"\r\n                            render={(text, record) => (\r\n\r\n                                <a><ContainerOutlined />{text}</a>\r\n\r\n                            )}\r\n                        />\r\n\r\n                        <Column title=\"bên đối tác\" dataIndex=\"ben_tham_gia\" key=\"ben_tham_gia\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"bên tạo \" dataIndex=\"ben_tao_hd\" key=\"ben_tao_hd\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"người tạo \" dataIndex=\"nguoi_tao_hd\" key=\"nguoi_tao_hd\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n                            render={(text, record) => {\r\n                                let color = 'pink'\r\n                                if (text === 'deactive') {\r\n                                    color = 'red'\r\n                                } else if (text === 'active') {\r\n                                    color = 'green'\r\n                                } else if (text === 'pending') {\r\n                                    color = 'blue'\r\n                                } else if (text === 'waiting for customer') {\r\n                                    color = 'pink'\r\n                                } else if (text === 'rejected') {\r\n                                    color = 'grey'\r\n                                }\r\n                                return (<Tag color={color} key={text}>\r\n                                    {text.toUpperCase()}\r\n                                </Tag>);\r\n                            }}\r\n                        />\r\n                        <Column\r\n                            title=\"Xem chi tiết\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <EyeOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={\r\n                                    () => this.setState({\r\n                                        contract: text,\r\n                                        showContractExtension: true\r\n                                    })\r\n                                } />\r\n\r\n                            )}\r\n                        />\r\n                        <Column\r\n                            title=\"Vô hiệu hóa\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                            )}\r\n                        />\r\n                        {this.props.role == 'Director' ? <Column\r\n                            title=\"Ký\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <FormOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                            )}\r\n                        /> : null}\r\n\r\n                    </Table></div>\r\n\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (contractExtension) => {\r\n            dispatch(createcontractExtension(contractExtension))\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        newContractExtension: state.myContractExtensionReducer\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps) (ContractExtensionTable)","export const contractExtensionInformation = () => {\r\n    return {\r\n      type: 'LIST_contractExtension',\r\n    }\r\n  }\r\n  export const createcontractExtension = (contractExtension) => {\r\n    \r\n    return {\r\n      type: 'CREATE_contractExtension',\r\n      contractExtension\r\n    }\r\n  }\r\n  export const updatecontractExtension = (contractExtension) => {\r\n    return {\r\n      type: 'UPDATE_contractExtension',\r\n      contractExtension\r\n    }\r\n  }\r\n  export const deactivecontractExtension = (contractExtensionID) => {\r\n    return {\r\n      type: 'DEACTIVE_contractExtension',\r\n      contractExtensionID\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n    FileExcelOutlined, IdcardOutlined, BankOutlined, PhoneOutlined, PrinterOutlined, HomeOutlined, MailOutlined\r\n    , ContactsOutlined, CalendarOutlined, DollarOutlined, CloudDownloadOutlined, CloudUploadOutlined, AuditOutlined\r\n} from '@ant-design/icons';\r\nimport ContractExtensionTable from './ContractExtensionTable'\r\nimport { Descriptions, InputNumber, Space, Button, DatePicker, Input, PageHeader, Form, Row, Col, Comment, List, Avatar } from 'antd';\r\nimport ContractTable from './ContractTable'\r\nimport moment from 'moment'\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst CommentList = ({ comments }) => (\r\n    <List\r\n        dataSource={comments}\r\n        header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\r\n        itemLayout=\"horizontal\"\r\n        renderItem={props => <Comment {...props} />}\r\n    />\r\n);\r\n\r\nclass ContractView extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            openExtension: false,\r\n            openCommentSection: false,\r\n            finish: false,\r\n            showContent: \"customer\",\r\n            comments: [],\r\n            submitting: false,\r\n            value: '',\r\n        };\r\n\r\n        this.OpenExtension = this.OpenExtension.bind(this)\r\n        this.OpenCommentSection = this.OpenCommentSection.bind(this)\r\n    }\r\n    handleSubmit = () => {\r\n        if (!this.state.value) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            submitting: true,\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                submitting: false,\r\n                value: '',\r\n                comments: [\r\n                    {\r\n                        author: 'Han Solo',\r\n\r\n                        content: <p>{this.state.value}</p>,\r\n                        datetime: moment().fromNow(),\r\n                    },\r\n                    ...this.state.comments,\r\n                ],\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            value: e.target.value,\r\n        });\r\n    };\r\n    OpenExtension() {\r\n        this.setState({\r\n            openExtension: true\r\n        })\r\n    }\r\n    OpenCommentSection() {\r\n        this.setState({\r\n            openCommentSection: true\r\n        })\r\n    }\r\n    onFinish = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n\r\n    };\r\n    onFinishComment = () => {\r\n\r\n\r\n\r\n    };\r\n    onFinishCommenFailt = () => {\r\n\r\n\r\n\r\n    };\r\n    ShowCustomer = () => {\r\n        this.setState({\r\n            showContent: \"customer\"\r\n        })\r\n    };\r\n    ShowContent = () => {\r\n        this.setState({\r\n            showContent: \"content\"\r\n        })\r\n    };\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    render() {\r\n        const { comments, submitting, value } = this.state;\r\n        const Editor = ({ onChange, onSubmit, submitting, value }) => (\r\n            <Form\r\n\r\n                name=\"basic\"\r\n                className=\"lcontract-form\"\r\n\r\n                onFinish={this.onFinishComment}\r\n                onFinishFailed={this.onFinishCommentFailed}\r\n\r\n            >\r\n                <Form.Item>\r\n                    <TextArea rows={4} onChange={onChange} value={value} />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\r\n                        Yêu cầu sửa\r\n                </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n        if (this.props.role === true) {\r\n\r\n            if (this.state.openExtension) {\r\n                return (<ContractExtensionTable role={this.props.role} />);\r\n            } else {\r\n                if (this.state.finish) {\r\n                    return (<ContractTable role={this.props.role} />);\r\n                } else {\r\n                    return (\r\n\r\n                        <div style={{ height: \"100vh\" }}>\r\n                            <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                                Trở về\r\n                            </Button>\r\n                            <h2 style={{ textAlign: 'center' }}>Hợp đồng </h2>\r\n                            <Row>\r\n                                <Col span={3} order={1} />\r\n                                <Col span={20} order={2}>\r\n                                    <PageHeader\r\n                                        className=\"site-page-header\"\r\n                                        ghost={false}\r\n                                        title=\"Thông tin bên A\">\r\n                                        <Descriptions size=\"small\" column={2} >\r\n                                            <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                                Usada Pekora\r\n                                            </Descriptions.Item>\r\n\r\n\r\n                                        </Descriptions>\r\n                                    </PageHeader>\r\n\r\n\r\n                                    <PageHeader\r\n                                        className=\"site-page-header\"\r\n                                        ghost={false}\r\n                                        title=\"Thông tin bên B\"\r\n                                        subTitle={[]}\r\n                                        extra={[<Button type=\"primary\" onClick={this.ShowCustomer}>Thông tin bên B</Button>,\r\n                                        <Button type=\"primary\" onClick={this.ShowContent}>Thông tin hợp đồng</Button>\r\n                                        ]}\r\n                                    >\r\n                                        {this.state.showContent === \"customer\" ?\r\n                                            <Descriptions title=\"\" size=\"small\" column={2}  >\r\n\r\n                                                <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                                    Usada Pekora\r\n                                                </Descriptions.Item>\r\n\r\n\r\n                                            </Descriptions> : null}\r\n                                        {this.state.showContent === \"content\" ?\r\n                                            <Form\r\n\r\n                                                name=\"basic\"\r\n                                                className=\"lcontract-form\"\r\n\r\n                                                onFinish={this.onFinish}\r\n                                                onFinishFailed={this.onFinishFailed}\r\n\r\n                                            >\r\n                                                <Descriptions title=\"Nội dung hợp đồng\" size=\"small\" column={1}   >\r\n                                                    <Descriptions.Item label=\"Contract duration\"> <RangePicker\r\n                                                        showTime={{ format: 'HH:mm' }}\r\n                                                        format=\"YYYY-MM-DD HH:mm\"\r\n                                                        onChange={this.onChange}\r\n                                                        onOk={this.onOk}\r\n                                                    /></Descriptions.Item>\r\n                                                    <Descriptions.Item label=\"Giá trị:\">\r\n                                                        <Form.Item\r\n\r\n                                                            name=\"value\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Vui lòng nhập Giá trị:',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <InputNumber\r\n                                                                defaultValue={1000}\r\n                                                                formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                            />\r\n                                                        </Form.Item>\r\n\r\n                                                    </Descriptions.Item>\r\n                                                    <a>Dieu khoan 1:</a><br />\r\n                                                    <a>Dieu khoan 2:</a><br />\r\n                                                    <a>Dieu khoan 3:</a><br />\r\n                                                    <a>Dieu khoan 4:</a><br />\r\n\r\n                                                </Descriptions>\r\n                                                {comments.length > 0 && <CommentList comments={comments} />}\r\n\r\n\r\n\r\n\r\n\r\n                                                <Space size=\"large\">\r\n\r\n                                                    {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Sign\" onClick={this.onFinish}>{/*Nút này xuất hiện khi chưa ai kí hợp đồng nhưng chỉ có director mới thấy*/}\r\n                                                        Kí\r\n                                                    </Button> : this.props.contract.status == \"waiting for sign\" ? <Button type=\"primary\" value=\"Sign\" onClick={this.onFinish}>{/*Nút này xuất hiện khi chưa ai kí hợp đồng nhưng chỉ có director mới thấy*/}\r\n                                                        Kí\r\n                                                    </Button> : null}\r\n                                                    {this.props.contract.status == \"pending\" ? <Comment\r\n                                                        avatar={\r\n                                                            <Avatar\r\n                                                                src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                                                                alt=\"Han Solo\"\r\n                                                            />\r\n                                                        }\r\n                                                        content={\r\n                                                            <Editor\r\n                                                                onChange={this.handleChange}\r\n                                                                onSubmit={this.handleSubmit}\r\n                                                                submitting={submitting}\r\n                                                                value={value}\r\n                                                            />\r\n                                                        }\r\n                                                    /> : null}\r\n                                                    {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Edit\">{/*Nút này xuất hiện khi chưa ai kí hợp đồng*/}\r\n                                                            Sửa\r\n                                                    </Button> : null}\r\n                                                    {this.props.contract.status == \"active\" ? <Button type=\"primary\" onClick={this.OpenExtension} value=\"ViewExtension\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                                            Xem phụ lục\r\n                                                    </Button> : null}\r\n                                                    {this.props.contract.status == \"deactive\" ? <Button type=\"primary\" onClick={this.OpenExtension} value=\"ViewExtension\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                                            Xem phụ lục\r\n                                                        </Button> : null}\r\n                                                    {this.props.contract.status == \"waiting for sign\" ? <Button type=\"primary\" value=\"reject\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                                            Reject\r\n                                                        </Button> : null}\r\n                                                </Space>\r\n                                            </Form> : null}\r\n                                    </PageHeader>\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                        </div>\r\n\r\n                    );\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n\r\n\r\n            if (this.state.openExtension) {\r\n                return (<ContractExtensionTable role={this.props.role} />);\r\n            } else {\r\n                if (this.state.finish) {\r\n                    return (<ContractTable role={this.props.role} />);\r\n                } else {\r\n                    return (\r\n                        <div style={{ height: \"100vh\" }}>\r\n                            <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                                Trở về\r\n              </Button>\r\n                            <h2 style={{ textAlign: 'center' }}>Hợp đồng </h2>\r\n                            <Row>\r\n                                <Col span={3} order={1} />\r\n                                <Col span={20} order={2}>\r\n                                    <PageHeader\r\n                                        className=\"site-page-header\"\r\n                                        ghost={false}\r\n                                        title=\"Thông tin bên A\">\r\n                                        <Descriptions size=\"small\" column={2} >\r\n                                            <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                            <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                                Usada Pekora\r\n                        </Descriptions.Item>\r\n\r\n\r\n                                        </Descriptions>\r\n                                    </PageHeader>\r\n\r\n\r\n                                    <PageHeader\r\n                                        className=\"site-page-header\"\r\n                                        ghost={false}\r\n                                        title=\"Thông tin bên B\"\r\n                                        subTitle={[]}\r\n                                        extra={[<Button type=\"primary\" onClick={this.ShowCustomer}>Thông tin bên B</Button>,\r\n                                        <Button type=\"primary\" onClick={this.ShowContent}>Thông tin hợp đồng</Button>\r\n                                        ]}\r\n                                    >\r\n                                        {this.state.showContent === \"customer\" ?\r\n                                            <Descriptions title=\"\" size=\"small\" column={2}  >\r\n\r\n                                                <Descriptions.Item label={(<b><IdcardOutlined />{\"Tên doanh nghiệp:\"}</b>)}>HiSign</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><BankOutlined />{\"Mã số thuế:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><PhoneOutlined />{\"Điện thoại:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><PrinterOutlined />{\"Số Fax:\"}</b>)}>123123123123</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><HomeOutlined />{\"Địa chỉ:\"}</b>)}>asdasdasd</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><MailOutlined />{\"Địa chỉ Email:\"}</b>)}>sfds@gmail.com</Descriptions.Item>\r\n                                                <Descriptions.Item label={(<b><ContactsOutlined />{\"Người đại diện:\"}</b>)} span={2}>\r\n                                                    Usada Pekora\r\n                        </Descriptions.Item>\r\n\r\n\r\n                                            </Descriptions> : null}\r\n                                        {this.state.showContent === \"content\" ?\r\n                                            <Form\r\n                                                name=\"basic\"\r\n                                                className=\"lcontract-form\"\r\n\r\n                                                onFinish={this.onFinish}\r\n                                                onFinishFailed={this.onFinishFailed}\r\n\r\n                                            >\r\n                                                <Descriptions title=\"Nội dung hợp đồng\" size=\"small\" column={1}   >\r\n                                                    <Descriptions.Item label=\"Contract duration\"> <RangePicker\r\n                                                        showTime={{ format: 'HH:mm' }}\r\n                                                        format=\"YYYY-MM-DD HH:mm\"\r\n                                                        onChange={this.onChange}\r\n                                                        onOk={this.onOk}\r\n                                                    /></Descriptions.Item>\r\n                                                    <a>Dieu khoan 1:</a><br />\r\n                                                    <a>Dieu khoan 2:</a><br />\r\n                                                    <a>Dieu khoan 3:</a><br />\r\n                                                    <a>Dieu khoan 4:</a><br />\r\n                                                    <Descriptions.Item label=\"Giá trị:\">\r\n                                                        <Form.Item\r\n\r\n                                                            name=\"value\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Vui lòng nhập Giá trị:',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <InputNumber\r\n                                                                defaultValue={1000}\r\n                                                                formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                                parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                            />\r\n                                                        </Form.Item>\r\n\r\n                                                    </Descriptions.Item>\r\n                                                </Descriptions>\r\n\r\n                                                <Space size=\"large\">\r\n\r\n\r\n                                                    {this.props.contract.status == \"pending\" ? <Button type=\"primary\" value=\"Edit\">{/*Nút này xuất hiện khi chưa ai kí hợp đồng*/}\r\n                                Sửa\r\n              </Button> : null}\r\n                                                    {this.props.contract.status == \"active\" ? <Button type=\"primary\" onClick={this.OpenExtension} value=\"ViewExtension\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                Xem phụ lục\r\n              </Button> : null}\r\n                                                    {this.props.contract.status == \"deactive\" ? <Button type=\"primary\" onClick={this.OpenExtension} value=\"ViewExtension\">{/*nút này xuất hiện khi 2 bên đã kí hợp đồng này*/}\r\n                                Xem phụ lục\r\n              </Button> : null}\r\n                                                </Space>\r\n                                            </Form> : null}\r\n                                    </PageHeader>\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                        </div>\r\n\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default ContractView","import 'antd/dist/antd.css';\r\nimport { Table, Button, Space, Tag } from 'antd';\r\nimport ContractSearch from './ContractSearch'\r\nimport './Column.css'\r\nimport {\r\n    EyeOutlined, DeleteOutlined, FormOutlined, FileAddOutlined, UploadOutlined, ContainerOutlined,\r\n    UsergroupAddOutlined, UserSwitchOutlined, UserAddOutlined, LogoutOutlined, MonitorOutlined\r\n} from \"@ant-design/icons\"\r\nimport ChooseContractTemplate from './ChooseContractTemplate'\r\nimport ViewContractPage from './ViewContractPage'\r\nimport React, { Component } from 'react';\r\nimport { createContract, contractInformation } from '../actions/ContractAction'\r\nimport { connect } from 'react-redux'\r\nconst { Column } = Table;\r\n\r\n\r\nconst dataSource = []\r\n// for (var i = 0; i < 5; i++) {\r\n\r\n//     const contract = {\r\n\r\n//         contract_name: 'Hop dong lao dong',\r\n//         status: \"pending\",\r\n//         ben_tao_hd: 'HiSign',\r\n//         ben_tham_gia: 'cty 369',\r\n//         nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n//         deadline: \"12/12/2022\",\r\n\r\n//     }\r\n//     dataSource.push(contract)\r\n\r\n\r\n\r\n\r\n// }\r\n\r\nclass ContractTable extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showCreateContract: false,\r\n            showContract: false,\r\n            contract: {}\r\n        };\r\n        this.onOpenCreateContract = this.onOpenCreateContract.bind(this);\r\n        this.viewContract = this.viewContract.bind(this);\r\n\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n        if (this.props.newContract.length === 0) {\r\n            const contract1 = {\r\n\r\n                contract_name: 'Hop dong lao dong',\r\n                status: \"deactive\",\r\n                ben_tao_hd: 'HiSign',\r\n                ben_tham_gia: 'cty 369',\r\n                nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract2 = {\r\n\r\n                contract_name: 'Hop dong lao dong',\r\n                status: \"waiting for customer\",\r\n                ben_tao_hd: 'HiSign',\r\n                ben_tham_gia: 'cty 369',\r\n                nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract3 = {\r\n\r\n                contract_name: 'Hop dong lao dong',\r\n                status: \"pending\",\r\n                ben_tao_hd: 'HiSign',\r\n                ben_tham_gia: 'cty 369',\r\n                nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract4 = {\r\n\r\n                contract_name: 'Hop dong lao dong',\r\n                status: \"active\",\r\n                ben_tao_hd: 'HiSign',\r\n                ben_tham_gia: 'cty 369',\r\n                nguoi_tao_hd: \"Nguyen Ngoc Phu\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            const contract5 = {\r\n\r\n                contract_name: 'Hop dong mua ban',\r\n                status: \"waiting for sign\",\r\n                ben_tao_hd: 'cty 369',\r\n                ben_tham_gia: 'HiSign',\r\n                nguoi_tao_hd: \"AAA\",\r\n                deadline: \"12/12/2022\",\r\n\r\n            }\r\n            this.props.onSubmit(contract1)\r\n            this.props.onSubmit(contract2)\r\n            this.props.onSubmit(contract3)\r\n            this.props.onSubmit(contract4)\r\n            this.props.onSubmit(contract5)\r\n        }\r\n\r\n    }\r\n    onOpenCreateContract() {\r\n        this.setState({\r\n            showCreateContract: true\r\n        })\r\n    }\r\n    viewContract() {\r\n\r\n        this.setState({\r\n\r\n            showContract: true\r\n        })\r\n    }\r\n    render() {\r\n\r\n\r\n\r\n        if (this.state.showCreateContract) {\r\n            return (\r\n                <ChooseContractTemplate role={this.props.role} />\r\n            );\r\n        } else if (this.state.showContract) {\r\n            return (\r\n                <ViewContractPage contract={this.state.contract} role={this.props.role} />\r\n            );\r\n        }\r\n        else {\r\n\r\n            return (\r\n                <div style={{height: \"100vh\"}}>\r\n                    <Space size=\"large\">\r\n                        <Button type=\"primary\" icon={<FileAddOutlined />} onClick={this.onOpenCreateContract}>Tạo hợp đồng</Button>\r\n                        <Button type=\"primary\" icon={<UploadOutlined />} >Tải lên hợp đồng</Button>\r\n                    </Space>\r\n                    <ContractSearch />\r\n                    <Table dataSource={this.props.newContract}\r\n                        rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'}>\r\n                        <Column title=\"tên hợp đồng\" dataIndex=\"contract_name\" key=\"contract_name\"\r\n                            render={(text, record) => (\r\n\r\n                                <a><ContainerOutlined />{text}</a>\r\n\r\n                            )}\r\n                        />\r\n\r\n                        <Column title=\"bên đối tác\" dataIndex=\"ben_tham_gia\" key=\"ben_tham_gia\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"Ngày hết hạn\" dataIndex=\"deadline\" key=\"deadline\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"người tạo hợp đồng\" dataIndex=\"nguoi_tao_hd\" key=\"nguoi_tao_hd\"\r\n                        render={(text, record) => (\r\n\r\n                            <b>{text}</b>\r\n\r\n                        )} />\r\n                        <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n                            render={(text, record) => {\r\n                                let color = 'pink'\r\n                                if (text === 'deactive') {\r\n                                    color = 'red'\r\n                                } else if (text === 'active') {\r\n                                    color = 'green'\r\n                                } else if (text === 'pending') {\r\n                                    color = 'blue'\r\n                                } else if (text === 'waiting for customer') {\r\n                                    color = 'pink'\r\n                                } else if (text === 'rejected') {\r\n                                    color = 'grey'\r\n                                }\r\n                                return (<Tag color={color} key={text}>\r\n                                    {text.toUpperCase()}\r\n                                </Tag>);\r\n                            }}\r\n                        />\r\n                        <Column\r\n                            title=\"Xem chi tiết\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <EyeOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={\r\n                                    () => this.setState({\r\n                                        contract: text,\r\n                                        showContract: true\r\n                                    })\r\n                                } />\r\n\r\n                            )}\r\n                        />\r\n                        <Column\r\n                            title=\"Vô hiệu hóa\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                            )}\r\n                        />\r\n                        {this.props.role === true ? <Column\r\n                            title=\"Ký\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n\r\n                                <FormOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.viewContract} />\r\n\r\n                            )}\r\n                        /> : null}\r\n\r\n                    </Table></div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (contract) => {\r\n            dispatch(createContract(contract))\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n    return {\r\n        newContract: state.myContractReducer\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContractTable)","export const customerInformation = () => {\r\n    return {\r\n      type: 'LIST_customer',\r\n    }\r\n  }\r\n  export const createCustomer = (customer) => {\r\n    \r\n    return {\r\n      type: 'CREATE_customer',\r\n      customer\r\n    }\r\n  }\r\n  export const updateCustomer = (customer) => {\r\n    return {\r\n      type: 'UPDATE_customer',\r\n      customer\r\n    }\r\n  }\r\n  export const deactiveCustomer = (customerID) => {\r\n    return {\r\n      type: 'DEACTIVE_customer',\r\n      customerID\r\n    }\r\n  }","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nimport { createCustomer, customerInformation } from '../actions/CustomerAction'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\nimport CustomerTable from './CustomerTable'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\nclass AddCustomer extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            finish: false\r\n        };\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n\r\n        const contract1 = {\r\n\r\n            name: 'John',\r\n            company: \"cty 369\",\r\n            address: '10 Downing Street',\r\n            status: \"active\",\r\n\r\n        }\r\n\r\n\r\n        this.props.onSubmit(contract1)\r\n        this.setState({\r\n            finish: true\r\n        })\r\n\r\n    };\r\n    Cancel = () => {\r\n        this.setState({\r\n            finish: true\r\n        })\r\n    }\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    render() {\r\n        if (this.state.finish) {\r\n            return (<CustomerTable role={this.props.role} />);\r\n        } else {\r\n\r\n\r\n            return (\r\n                <div style={{\r\n                    margin: \"auto\",\r\n                    width: \"1000px\",\r\n                    paddingLeft: \"50px\",\r\n                    border: \"solid\"\r\n                }\r\n                }>\r\n                    <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                    <h2 style={{ textAlign: 'center' }}>Thông tin khách hàng</h2>\r\n                    <React.Fragment>\r\n                        <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                            <Col span={10} >\r\n                                <Grid container spacing={3}>\r\n\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"company\"\r\n                                            name=\"Tên doanh nghiệp\"\r\n                                            label=\"Tên doanh nghiệp\"\r\n                                            fullWidth\r\n                                            autoComplete=\"Tên doanh nghiệp\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"taxCode\"\r\n                                            name=\"Mã số thuế\"\r\n                                            label=\"Mã số thuế\"\r\n                                            fullWidth\r\n                                            autoComplete=\"family-name\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"faxCode\"\r\n                                            name=\"số fax\"\r\n                                            label=\"số fax\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping address-line1\"\r\n                                        />\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"email\"\r\n                                            name=\"địa chỉ mail\"\r\n                                            label=\"địa chỉ mail\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping address-level2\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            id=\"address\"\r\n                                            name=\"địa chỉ\"\r\n                                            label=\"địa chỉ\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping address-line2\"\r\n                                        />\r\n                                    </Grid>\r\n\r\n\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"presentor\"\r\n                                            name=\"Người đại diện\"\r\n                                            label=\"Người đại diện\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping postal-code\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"role\"\r\n                                            name=\"chức vụ\"\r\n                                            label=\"chức vụ\"\r\n                                            fullWidth\r\n                                            autoComplete=\"shipping country\"\r\n                                        />\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                                <div></div><br />\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Button type=\"primary\" >\r\n                                        Nộp\r\n                            </Button>\r\n                                    <Button type=\"primary\" style={{\r\n                                        margin: '0 8px',\r\n                                    }} htmlType=\"button\">\r\n                                        Reset\r\n                            </Button>\r\n                                </Grid>\r\n                            </Col>\r\n                        </Row>\r\n                    </React.Fragment>\r\n                    {/* <Form\r\n                        {...layout}\r\n                        name=\"basic\"\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        labelAlign=\"left\"\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                    ><br />\r\n                        <Form.Item\r\n                            label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                            name=\"companyname\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập tên doanh nghiệp',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                            name=\"email\"\r\n                            requiredMark=\"false\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Địa chỉ email',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                            name=\"taxcode\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Mã số thuế',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                            name=\"address\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Vui lòng nhập Địa chỉ',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                            <Button type=\"primary\" style={{\r\n                                margin: '0 8px',\r\n                            }} htmlType=\"button\">\r\n                                <RedoOutlined />    Reset\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form> */}\r\n                </div >\r\n            );\r\n        }\r\n    }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (customer) => {\r\n            dispatch(createCustomer(customer))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddCustomer)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass ViewCustomer extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin khách hàng</h2>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ViewCustomer;","import React from \"react\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Button, Space, Breadcrumb, PageHeader } from 'antd';\r\nclass CustomerSearch extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n\r\n\r\n\r\n                <br />\r\n                <div className=\"container\">\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n\r\n                        title={[<Space size=\"large\">\r\n\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>Tất cả</Breadcrumb.Item>\r\n                              \r\n                                <Breadcrumb.Item>đang có hiệu lực</Breadcrumb.Item>\r\n                                <Breadcrumb.Item>hết hiệu lực</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n\r\n                        </Space>]}\r\n                        extra={[\r\n\r\n                            <Space size=\"large\">\r\n                                <input ref=\"searchInput\" />\r\n                                <Button type=\"primary\" shape=\"circle\" icon={<SearchOutlined />} />\r\n                            </Space>\r\n                        ]}\r\n                    >\r\n\r\n\r\n\r\n                    </PageHeader>\r\n\r\n                </div>\r\n\r\n            </div>);\r\n    }\r\n}\r\nexport default CustomerSearch;","import 'antd/dist/antd.css';\r\nimport { Table, Space, Button, Tag } from 'antd';\r\nimport AddCustomer from './AddCustomer'\r\nimport ViewCustomer from './ViewCustomer'\r\nimport React from 'react';\r\nimport './Column.css'\r\nimport CustomerSearch from './CustomerSearch'\r\nimport { createCustomer, customerInformation } from '../actions/CustomerAction'\r\nimport { connect } from 'react-redux'\r\nimport { UserAddOutlined, EditOutlined, DeleteOutlined, UserOutlined } from \"@ant-design/icons\"\r\nconst { Column } = Table;\r\n\r\n\r\nclass CustomerList extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      openCustomer: \"\",\r\n\r\n    };\r\n\r\n    this.OpenAddCustomer = this.OpenAddCustomer.bind(this);\r\n    this.OpenViewCustomer = this.OpenViewCustomer.bind(this);\r\n\r\n  }\r\n  componentDidMount() {\r\n\r\n    if (this.props.newCustomer.length === 0) {\r\n      const contract1 = {\r\n\r\n        name: 'John',\r\n        company: \"cty 369\",\r\n        address: '10 Downing Street',\r\n        status: \"deactive\",\r\n\r\n      }\r\n      const contract2 = {\r\n\r\n        name: 'Mike',\r\n        company: \"cty 369\",\r\n        address: '10 Downing Street',\r\n        status: \"active\",\r\n\r\n      }\r\n\r\n      this.props.onSubmit(contract1)\r\n      this.props.onSubmit(contract2)\r\n\r\n    }\r\n\r\n  }\r\n  OpenAddCustomer() {\r\n    this.setState({\r\n      openCustomer: \"openAddCustomer\",\r\n\r\n    })\r\n  }\r\n  OpenViewCustomer() {\r\n    this.setState({\r\n      openCustomer: \"openViewCustomer\",\r\n    })\r\n  }\r\n  render() {\r\n    if (this.state.openCustomer === \"openAddCustomer\") {\r\n      return (\r\n        <AddCustomer />\r\n      );\r\n    } else if (this.state.openCustomer === \"openViewCustomer\") {\r\n      return (<AddCustomer />);\r\n\r\n    }\r\n    else {\r\n      return (\r\n        <div style={{ height: \"100vh\" }}><Button type=\"primary\" onClick={this.OpenAddCustomer} icon={<UserAddOutlined />}>Tạo khách hàng mới</Button>\r\n          <CustomerSearch />\r\n          <Table dataSource={this.props.newCustomer}\r\n            rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'} >\r\n            <Column title=\"Tên doanh nghiệp\" dataIndex=\"company\" key=\"company\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n\r\n            <Column title=\"Người đại diện\" dataIndex=\"name\" key=\"name\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n            <Column title=\"Địa chỉ\" dataIndex=\"address\" key=\"address\" render={(text, record) => (\r\n\r\n              <b>{text}</b>\r\n\r\n            )} />\r\n\r\n            <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n              render={(text, record) => {\r\n                let color = 'pink'\r\n                if (text === 'deactive') {\r\n                  color = 'red'\r\n                } else if (text === 'active') {\r\n                  color = 'green'\r\n                } else if (text === 'pending') {\r\n                  color = 'blue'\r\n                } else if (text === 'waiting for customer') {\r\n                  color = 'pink'\r\n                } else if (text === 'rejected') {\r\n                  color = 'grey'\r\n                }\r\n                return (<Tag color={color} key={text}>\r\n                  {text.toUpperCase()}\r\n                </Tag>);\r\n              }}\r\n            />\r\n            <Column\r\n              title=\"Cập nhật thông tin\"\r\n              key=\"action\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  <EditOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Sửa</EditOutlined>\r\n                </Space>\r\n              )}\r\n            />\r\n            <Column\r\n              title=\"Tác vụ\"\r\n              dataIndex=\"status\"\r\n              key=\"status\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Vô hiệu hóa</DeleteOutlined> : null}\r\n                  {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>kích hoạt</UserOutlined> : null}\r\n                </Space>\r\n              )}\r\n            />\r\n\r\n          </Table></div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSubmit: (customer) => {\r\n      dispatch(createCustomer(customer))\r\n    }\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n  return {\r\n    newCustomer: state.myCustomerReducer\r\n  }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList)","import 'antd/dist/antd.css';\r\nimport { Table, Space, Button, Tag } from 'antd';\r\nimport TemplateUpload from './TemplateUpload';\r\nimport React from 'react';\r\nimport './Column.css'\r\nimport ContractTypeSearch from './ContractTypeSearch'\r\nimport { createContractType, contractTypeInformation } from '../actions/ContractType'\r\nimport { connect } from 'react-redux'\r\nimport { UploadOutlined, FileOutlined, DeleteOutlined,UserOutlined,FileWordOutlined } from \"@ant-design/icons\"\r\nconst { Column } = Table;\r\n\r\n\r\n\r\nclass ContractTable extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      showTemplateCreate: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n  }\r\n  handleChange() {\r\n    this.setState({\r\n      showTemplateCreate: true,\r\n    })\r\n  }\r\n  componentDidMount() {\r\n\r\n    if (this.props.newContractType.length === 0) {\r\n        const contract1 = {\r\n\r\n          contract_type: 'Hop dong lao dong',\r\n\r\n          fileName: 'template1.dot',\r\n          status: \"active\"\r\n\r\n        }\r\n        const contract2 = {\r\n\r\n          contract_type: 'Hop dong lao dong',\r\n\r\n          fileName: 'template1.dot',\r\n          status: \"deactive\"\r\n\r\n        }\r\n        \r\n        this.props.onSubmit(contract1)\r\n        this.props.onSubmit(contract2)\r\n        \r\n    }\r\n\r\n}\r\n  render() {\r\n    if (this.state.showTemplateCreate) {\r\n      return (\r\n\r\n        <TemplateUpload />\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{height: \"100vh\"}}><Button type=\"primary\" onClick={this.handleChange} icon={<UploadOutlined />}>Tải lên mẫu mới</Button>\r\n          <ContractTypeSearch />\r\n          <Table dataSource={this.props.newContractType}\r\n            rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'}  >\r\n            <Column title=\"Loại hợp đồng\" dataIndex=\"contract_type\" key=\"contract_type\" \r\n            render={(text, record) => (\r\n\r\n              <a><FileOutlined />{text}</a>\r\n\r\n          )}\r\n            />\r\n\r\n            <Column title=\"Tên file\" dataIndex=\"fileName\" key=\"fileName\"\r\n            render={(text, record) => (\r\n\r\n              <b><FileWordOutlined />{text}</b>\r\n\r\n          )}\r\n             />\r\n            <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n              render={(text, record) => {\r\n                let color = 'pink'\r\n                if (text === 'deactive') {\r\n                  color = 'red'\r\n                } else if (text === 'active') {\r\n                  color = 'green'\r\n                } else if (text === 'pending') {\r\n                  color = 'blue'\r\n                } else if (text === 'waiting for customer') {\r\n                  color = 'pink'\r\n                } else if (text === 'rejected') {\r\n                  color = 'grey'\r\n                }\r\n                return (<Tag color={color} key={text}>\r\n                  {text.toUpperCase()}\r\n                </Tag>);\r\n              }}\r\n            />\r\n\r\n            <Column\r\n              title=\"Chọn file khác\"\r\n              key=\"Update\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  <UploadOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.handleChange}>Chọn file khác</UploadOutlined>\r\n                </Space>\r\n              )}\r\n            />\r\n            <Column\r\n              title=\"Vô hiệu hóa\"\r\n              dataIndex=\"status\"\r\n              key=\"status\"\r\n              render={(text, record) => (\r\n                <Space size=\"middle\">\r\n                  {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Vô hiệu hóa</DeleteOutlined> : null}\r\n                  {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>kích hoạt</UserOutlined> : null}\r\n                </Space>\r\n              )}\r\n            />\r\n          </Table></div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n      onSubmit: (contractType) => {\r\n          dispatch(createContractType(contractType))\r\n      }\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n  return {\r\n      newContractType: state.myContractTypeReducer\r\n  }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps) (ContractTable)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\r\nimport { Form, Input, Button, Checkbox,Divider,Row, Col } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass UpdateProfile extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin cá nhân</h2>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default UpdateProfile;","import { Menu, Layout } from 'antd';\r\nimport { PageHeader, Avatar, Dropdown, Space } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport { Badge } from 'antd';\r\nimport { UserOutlined, SettingOutlined, BellOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { connect } from 'react-redux'\r\nimport { logout, login } from '../actions/loginAction'\r\nimport LoginPage from './Login/LoginPage'\r\n\r\n\r\nclass Header extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showComponent: \"\",\r\n            logoutAction:false\r\n        };\r\n\r\n        this.Logout = this.Logout.bind(this);\r\n    }\r\n    Logout ()  {\r\n        this.setState({\r\n            logoutAction : true\r\n        })\r\n        this.props.onSubmit()\r\n    }\r\n    render() {\r\n       \r\n\r\n        var information = this.props.myLoginReducer.map((login, index) => {\r\n\r\n            const notifications = (\r\n                <Menu >\r\n\r\n                    <Menu.Item  key=\"2\" >\r\n                       \r\n                      Some notifications\r\n             \r\n                    </Menu.Item>\r\n                   \r\n    \r\n                </Menu >\r\n            );\r\n            const menu = (\r\n                <Menu >\r\n\r\n                    <Menu.Item onClick={this.Logout} key=\"2\" icon={ <LogoutOutlined style={{ color: '#08c' }} key=\"1\" type=\"primary\" />} > \r\n                       \r\n                        Đăng xuất\r\n             \r\n                    </Menu.Item>\r\n                   \r\n    \r\n                </Menu >\r\n            );\r\n        return (<div>\r\n            <PageHeader\r\n                className=\"site-page-header\"\r\n                ghost={false}\r\n                title={[\r\n                ]}\r\n                extra={[\r\n                    <Dropdown overlay={notifications} placement=\"bottomCenter\" trigger={['click']}>\r\n                    <Badge count={1}><BellOutlined style={{ fontSize: '30px', color: '#08c' }} /></Badge>\r\n                    </Dropdown>,\r\n                    ,\r\n                    <Dropdown.Button overlay={menu} placement=\"bottomCenter\" icon={<SettingOutlined/>}>\r\n                        {login.username}\r\n                    </Dropdown.Button>\r\n\r\n                    ,\r\n                ]}\r\n            >\r\n\r\n            </PageHeader>\r\n        </div>);\r\n    })\r\n    if(this.state.logoutAction){\r\n        return(<LoginPage/>);\r\n    }else{\r\n        return(<div> { information }</div >);\r\n    }\r\n    \r\n    }\r\n}\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: () => {\r\n            dispatch(logout())\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n    return {\r\n        myLoginReducer: state.myLoginReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","export const loginInformation = () => {\r\n    return {\r\n      type: 'LIST_login',\r\n    }\r\n  }\r\n  export const addLogin = (login) => {\r\n    return {\r\n      type: 'ADD_login',\r\n      login\r\n    }\r\n  }\r\n  export const logout = () => {\r\n    return {\r\n      type: 'LOGOUT',\r\n      \r\n    }\r\n  }","import 'antd/dist/antd.css';\r\nimport { Menu, Layout } from 'antd';\r\nimport { PageHeader, Avatar, Descriptions, Space, Tag, Affix, Button } from 'antd';\r\nimport React from 'react';\r\nimport { Badge } from 'antd';\r\nimport UpdateProfileCompany from './UpdateProfileCompany'\r\nimport EmployeeTable from './EmployeeTable'\r\nimport ContractTypeForAdmin from './ContractTypeForAdmin'\r\nimport SignatureList from './SignatureList'\r\nimport { UserOutlined, ToolOutlined, NotificationOutlined, LogoutOutlined, MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport ContractTable from './ContractTable'\r\nimport CustomerTable from './CustomerTable'\r\nimport ContractTypeTable from './ContractTypeTable'\r\nimport UpdateProfile from './UpdateProfile'\r\nimport Header from './Header'\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport { connect } from 'react-redux'\r\nimport './Column.css'\r\nimport LoginPage from './Login/LoginPage'\r\nconst IconFont = createFromIconfontCN({\r\n  scriptUrl: [\r\n    '//at.alicdn.com/t/font_1788044_0dwu4guekcwr.js', // icon-javascript, icon-java, icon-shoppingcart (overrided)\r\n    '//at.alicdn.com/t/font_1788592_a5xf2bdic3u.js', // icon-shoppingcart, icon-python\r\n  ],\r\n});\r\nconst { SubMenu } = Menu;\r\nconst { Content, Sider } = Layout;\r\nclass EmployeeSideMenu extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      showComponent: \"\",\r\n      collapsed: false,\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  toggleCollapsed = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n  handleClick = e => {\r\n\r\n    this.setState({\r\n      showComponent: e.key\r\n    })\r\n\r\n  };\r\n\r\n  render() {\r\n    var information = this.props.myLoginReducer.map((login, index) => {\r\n      return (\r\n\r\n        <Layout style={{ height: \"100vh\" }}>\r\n\r\n          <Layout style={{ height: \"100vh\" }}>\r\n\r\n            <Sider width={250} className=\"site-layout-background\">\r\n\r\n              <IconFont type=\"icon-javascript\" style={{ fontSize: '60px', color: '#08c', marginLeft: \"40%\" }} />\r\n              <Descriptions size=\"small\" column={2}   >\r\n\r\n                <Descriptions.Item><Avatar size={70} icon={<UserOutlined />} /> </Descriptions.Item>\r\n\r\n\r\n\r\n                <Descriptions.Item><br />\r\n                  <b style={{ color: ' white' }}>{login.username}</b><br />\r\n                  <b style={{ color: ' white' }}>{login.role}</b><br />\r\n                  <b style={{ color: ' white' }}>Company ABC</b>\r\n                </Descriptions.Item>\r\n\r\n              </Descriptions>\r\n              <Button type=\"primary\" onClick={this.toggleCollapsed} style={{ marginBottom: 16 }}>\r\n                {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined)}\r\n              </Button>\r\n              <Menu\r\n                onClick={this.handleClick}\r\n                title={[]}\r\n                mode=\"inline\"\r\n                theme=\"dark\"\r\n                defaultSelectedKeys={[\"1\"]}\r\n                defaultOpenKeys={[\"sub1\"]}\r\n                style={{ height: \"100%\", borderRight: 0 }}\r\n                inlineCollapsed={this.state.collapsed}\r\n              >\r\n                <SubMenu key=\"sub1\" icon={<ToolOutlined />} title=\"Quản lý\">\r\n                  {login.contractManagePermision === true ? <Menu.Item key=\"contract\">danh sách hợp đồng</Menu.Item>: null}\r\n                  {login.customerManagePermission === true ?<Menu.Item key=\"customerList\">danh sách khách hàng</Menu.Item> : null}\r\n                  {login.contractTypeManagePermission === true ? <Menu.Item key=\"contractType\">danh sách loại hợp đồng</Menu.Item>: null}\r\n                  {login.employeeManagePermission === true ? <Menu.Item key=\"employee\">Nhân viên</Menu.Item>: null}\r\n                  {login.signatureManagePermission === true ?<Menu.Item key=\"signatureList\">Danh sách chữ ký</Menu.Item> : null}\r\n                  \r\n                  \r\n                  \r\n                  \r\n                  \r\n                  <Menu.Item key=\"companyProfile\">Thông tin công ty</Menu.Item>\r\n\r\n                </SubMenu>\r\n                <SubMenu key=\"sub2\" icon={<UserOutlined />} title=\"Thông tin cá nhân\">\r\n\r\n\r\n                  <Menu.Item key=\"profile\">Thông tin cá nhân</Menu.Item>\r\n                </SubMenu>\r\n              </Menu>\r\n            </Sider>\r\n            <Layout style={{ padding: \"0 24px 24px\", height: \"100vh\" }}>\r\n              <Affix onChange={(affixed) => console.log(affixed)}>\r\n                <Header></Header>\r\n              </Affix>\r\n              {this.state.showComponent === \"customerList\" ? <CustomerTable /> : null}\r\n              {this.state.showComponent === \"contract\" ? <ContractTable role={login.signPermission} /> : null}\r\n              {this.state.showComponent === \"contractType\" ? <ContractTypeTable /> : null}\r\n              {this.state.showComponent === \"profile\" ? <UpdateProfile /> : null}\r\n              {this.state.showComponent === \"employee\" ? <EmployeeTable /> : null}\r\n              {this.state.showComponent === \"signatureList\" ? <SignatureList /> : null}\r\n              {this.state.showComponent === \"contractType\" ? <ContractTypeForAdmin /> : null}\r\n              {this.state.showComponent === \"companyProfile\" ? <UpdateProfileCompany /> : null}\r\n\r\n\r\n\r\n            </Layout>\r\n          </Layout>\r\n        </Layout>\r\n      );\r\n    })\r\n    if (information.length === 0) {\r\n      return (<LoginPage />);\r\n    } else {\r\n      return (<div style={{ height: \"100vh\" }}> {information}</div >);\r\n    }\r\n\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n  return {\r\n    myLoginReducer: state.myLoginReducer\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(EmployeeSideMenu);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport {\r\n    IdcardOutlined, BankOutlined, HomeOutlined, MailOutlined\r\n    , CloudUploadOutlined, RedoOutlined\r\n} from '@ant-design/icons';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 4,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass ViewUser extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div style={{\r\n                margin: \"auto\",\r\n                width: \"1000px\",\r\n                paddingLeft:\"50px\",\r\n                border:\"solid\"\r\n            }\r\n            }>\r\n                <Button type=\"primary\" value=\"cancel\" onClick={this.Cancel}>\r\n                        Trở về\r\n              </Button>\r\n                <h2 style={{ textAlign: 'center' }}>Thông tin tài khoản</h2>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    labelAlign=\"left\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                ><br />\r\n                    <Form.Item\r\n                        label={(<b><IdcardOutlined />{\"Tên doanh nghiệp\"} </b>)}\r\n                        name=\"companyname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập tên doanh nghiệp',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label={(<b><MailOutlined /> {\"Địa chỉ Email\"} </b>)}\r\n                        name=\"email\"\r\n                        requiredMark=\"false\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><BankOutlined /> {\"Mã số thuế\"} </b>)}\r\n                        name=\"taxcode\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Mã số thuế',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={(<b><HomeOutlined /> {\"Địa chỉ\"} </b>)}\r\n                        name=\"address\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng nhập Địa chỉ',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <CloudUploadOutlined /> Nộp\r\n                            </Button>\r\n                        <Button type=\"primary\" style={{\r\n                            margin: '0 8px',\r\n                        }} htmlType=\"button\">\r\n                            <RedoOutlined />    Reset\r\n                            </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ViewUser;","import 'antd/dist/antd.css';\r\nimport { Table, Space, Tag } from 'antd';\r\nimport ViewUser from './ViewUser'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Header from './Header'\r\nimport { createUser, userInformation } from '../actions/UserAction'\r\nimport { connect } from 'react-redux'\r\nimport { UploadOutlined, FileOutlined, DeleteOutlined, UserOutlined, EditOutlined } from \"@ant-design/icons\"\r\nimport LoginPage from './Login/LoginPage'\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\nclass UserList extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      openViewUser: false,\r\n\r\n    };\r\n\r\n\r\n  }\r\n  componentDidMount() {\r\n\r\n    if (this.props.newUser.length === 0) {\r\n      const contract1 = {\r\n\r\n        name: 'John',\r\n        email: \"some email\",\r\n        address: '10 Downing Street',\r\n        status: \"deactive\",\r\n        company: \"Some Company\",\r\n        role: \"Some role\",\r\n\r\n      }\r\n      const contract2 = {\r\n\r\n        name: 'Mike',\r\n        email: \"some email\",\r\n        address: '10 Downing Street',\r\n        status: \"active\",\r\n        company: \"Some Company\",\r\n        role: \"Some role\",\r\n\r\n      }\r\n\r\n      this.props.onSubmit(contract1)\r\n      this.props.onSubmit(contract2)\r\n\r\n    }\r\n\r\n  }\r\n  OpenViewUser() {\r\n    this.setState({\r\n      openViewUser: true,\r\n    })\r\n  }\r\n  render() {\r\n    if (this.state.openViewUser) {\r\n      return (<ViewUser />);\r\n    } else {\r\n      var information = this.props.myLoginReducer.map((login, index) => {\r\n        return (\r\n          <div style={{height: \"100vh\"}}>\r\n            <Header></Header>\r\n            <Table dataSource={this.props.newUser}\r\n              rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' : 'table-row-dark'} >\r\n\r\n              <Column title=\"Tên\" dataIndex=\"name\" key=\"name\" render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n              <Column title=\"email\" dataIndex=\"email\" key=\"email\" render={(text, record) => (\r\n\r\n                <a>{text}</a>\r\n\r\n              )} />\r\n              <Column title=\"địa chỉ\" dataIndex=\"address\" key=\"address\" render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n\r\n              <Column title=\"doanh nghiệp\" dataIndex=\"company\" key=\"company\" render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n              <Column title=\"chức vụ\" dataIndex=\"role\" key=\"role\" render={(text, record) => (\r\n\r\n                <b>{text}</b>\r\n\r\n              )} />\r\n              <Column title=\"trạng thái\" dataIndex=\"status\" key=\"status\"\r\n                render={(text, record) => {\r\n                  let color = 'pink'\r\n                  if (text === 'deactive') {\r\n                    color = 'red'\r\n                  } else if (text === 'active') {\r\n                    color = 'green'\r\n                  } else if (text === 'pending') {\r\n                    color = 'blue'\r\n                  } else if (text === 'waiting for customer') {\r\n                    color = 'pink'\r\n                  } else if (text === 'rejected') {\r\n                    color = 'grey'\r\n                  }\r\n                  return (<Tag color={color} key={text}>\r\n                    {text.toUpperCase()}\r\n                  </Tag>);\r\n                }}\r\n              />\r\n\r\n              <Column\r\n                title=\"Xem chi tiết\"\r\n                key=\"action\"\r\n                render={(text, record) => (\r\n                  <Space size=\"middle\">\r\n                    <EditOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Sửa</EditOutlined>\r\n                  </Space>\r\n                )}\r\n              />\r\n              <Column\r\n                title=\"Chức năng\"\r\n                dataIndex=\"status\"\r\n                key=\"status\"\r\n                render={(text, record) => (\r\n                  <Space size=\"middle\">\r\n                    {text === \"active\" ? <DeleteOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>Vô hiệu hóa</DeleteOutlined> : null}\r\n                    {text === \"deactive\" ? <UserOutlined style={{ fontSize: '30px', color: '#08c' }} theme=\"outlined\" onClick={this.OpenViewCustomer}>kích hoạt</UserOutlined> : null}\r\n                  </Space>\r\n                )}\r\n              />\r\n            </Table></div>\r\n        );\r\n      })\r\n      if (information.length === 0) {\r\n        return (<LoginPage />);\r\n      } else {\r\n        return (<div> {information}</div >);\r\n      }\r\n    }\r\n  }\r\n}\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSubmit: (user) => {\r\n      dispatch(createUser(user))\r\n    }\r\n  }\r\n}\r\nvar mapStateToProps = state => {\r\n\r\n\r\n  return {\r\n    newUser: state.myUserReducer,\r\n    myLoginReducer: state.myLoginReducer\r\n  }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList)","export const userInformation = () => {\r\n  return {\r\n    type: 'LIST_user',\r\n  }\r\n}\r\nexport const createUser = (user) => {\r\n  \r\n  return {\r\n    type: 'CREATE_user',\r\n    user\r\n  }\r\n}\r\nexport const updateUser = (user) => {\r\n  return {\r\n    type: 'UPDATE_user',\r\n    user\r\n  }\r\n}\r\nexport const deactiveUser = (userID) => {\r\n  return {\r\n    type: 'DEACTIVE_user',\r\n    userID\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport LoginPage from './Login/LoginPage'\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n    },\r\n    wrapperCol: {\r\n        span: 14,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass SendJoinRequest extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            finish: false,\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        this.setState({\r\n            finish: true,\r\n        })\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    render() {\r\n        if (this.state.finish) {\r\n            return (<LoginPage />);\r\n        } else {\r\n\r\n\r\n\r\n            return (\r\n                <React.Fragment>\r\n                    <h2 style={{ textAlign: 'center' }}>Thông tin đăng ký</h2>\r\n                    <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                        <Col span={10} >\r\n                            <Grid container spacing={3}>\r\n\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"company\"\r\n                                        name=\"Tên doanh nghiệp\"\r\n                                        label=\"Tên doanh nghiệp\"\r\n                                        fullWidth\r\n                                        autoComplete=\"Tên doanh nghiệp\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"taxCode\"\r\n                                        name=\"Mã số thuế\"\r\n                                        label=\"Mã số thuế\"\r\n                                        fullWidth\r\n                                        autoComplete=\"family-name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"faxCode\"\r\n                                        name=\"số fax\"\r\n                                        label=\"số fax\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-line1\"\r\n                                    />\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"email\"\r\n                                        name=\"địa chỉ mail\"\r\n                                        label=\"địa chỉ mail\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-level2\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"address\"\r\n                                        name=\"địa chỉ\"\r\n                                        label=\"địa chỉ\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping address-line2\"\r\n                                    />\r\n                                </Grid>\r\n\r\n\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"presentor\"\r\n                                        name=\"Người đại diện\"\r\n                                        label=\"Người đại diện\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping postal-code\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"role\"\r\n                                        name=\"chức vụ\"\r\n                                        label=\"chức vụ\"\r\n                                        fullWidth\r\n                                        autoComplete=\"shipping country\"\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                            <div></div><br />\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Popup trigger={<Button type=\"primary\" >\r\n                                    Nộp\r\n                            </Button>} position=\"right center\">\r\n                                    <div>The sytem admin will contact you within 3 days</div>\r\n                                    <Button onClick={this.onFinish} type=\"primary\" >\r\n                                        Xác nhận\r\n                            </Button>\r\n                                </Popup>\r\n\r\n                                <Button type=\"primary\" style={{\r\n                                    margin: '0 8px',\r\n                                }} htmlType=\"button\">\r\n                                    Reset\r\n                            </Button>\r\n                            </Grid>\r\n                        </Col>\r\n                    </Row>\r\n                </React.Fragment>\r\n                // <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                //     <Col span={10} >\r\n                // <Form\r\n                //     {...layout}\r\n                //     name=\"basic\"\r\n                //     initialValues={{\r\n                //         remember: true,\r\n                //     }}\r\n                //     onFinish={this.onFinish}\r\n                //     onFinishFailed={this.onFinishFailed}\r\n                // >\r\n                //             <Form.Item\r\n                //                 label=\"Tên doanh nghiệp\"\r\n                //                 name=\"company\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>\r\n                //             <Form.Item\r\n                //                 label=\"Nguời đại diện\"\r\n                //                 name=\"presentor\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>   \r\n\r\n                //             <Form.Item\r\n                //                 label=\"Địa chỉ Email\"\r\n                //                 name=\"email\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>\r\n                //             <Form.Item\r\n                //                 label=\"Mã số thuế\"\r\n                //                 name=\"mst\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>\r\n                //             <Form.Item\r\n                //                 label=\"Địa chỉ\"\r\n                //                 name=\"address\"\r\n                //                 rules={[\r\n                //                     {\r\n                //                         required: true,\r\n                //                         message: 'Please input your username!',\r\n                //                     },\r\n                //                 ]}\r\n                //             >\r\n                //                 <Input />\r\n                //             </Form.Item>\r\n\r\n\r\n                //             <Form.Item {...tailLayout}>\r\n                //                 <Button type=\"primary\" htmlType=\"submit\">\r\n                //                     Nộp\r\n                //                 </Button>\r\n                //                 <Button type=\"primary\" style={{\r\n                //                     margin: '0 8px',\r\n                //                 }} htmlType=\"button\">\r\n                //                     Reset\r\n                //                 </Button>\r\n\r\n                //             </Form.Item>\r\n\r\n                //         </Form>\r\n                //     </Col>\r\n                // </Row>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default SendJoinRequest;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\r\nimport { Form, Input, Button, Checkbox,Col,Row } from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n    },\r\n    wrapperCol: {\r\n        span: 10,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nclass ForgetPassword extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n    onFinish = (values) => {\r\n        console.log(values);\r\n\r\n\r\n\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                <Col span={10} >\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={this.onFinishFailed}\r\n                \r\n            >\r\n                <Form.Item\r\n                    label=\"Địa chỉ Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Vui lòng nhập email',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n               \r\n\r\n\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Nộp\r\n                            </Button>\r\n                    \r\n                </Form.Item>\r\n\r\n            </Form></Col></Row>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ForgetPassword;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { PageHeader, Space, Row, Col } from 'antd';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport EmployeeSideMenu from '../EmployeeSideMenu';\r\n\r\nimport UserTable from '../UserTable';\r\nimport SendJoinRequest from '../SendJoinRequest'\r\nimport ForgetPassword from '../ForgetPassword'\r\nimport { GoogleOutlined } from \"@ant-design/icons\"\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport { connect } from 'react-redux'\r\nimport { addLogin, login } from '../../actions/loginAction'\r\n\r\nconst IconFont = createFromIconfontCN({\r\n    scriptUrl: [\r\n        '//at.alicdn.com/t/font_1788044_0dwu4guekcwr.js', // icon-javascript, icon-java, icon-shoppingcart (overrided)\r\n        '//at.alicdn.com/t/font_1788592_a5xf2bdic3u.js', // icon-shoppingcart, icon-python\r\n    ],\r\n});\r\nconst layout = {\r\n    labelCol: {\r\n        span: 6,\r\n\r\n    },\r\n    wrapperCol: {\r\n        span: 14,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\nconst middleLayout = {\r\n    wrapperCol: {\r\n        offset: 6,\r\n        span: 10,\r\n    },\r\n};\r\n\r\nconst userList = [\r\n    {\r\n        username: \"phu111\",\r\n        password: \"123\",\r\n\r\n    },\r\n    {\r\n        username: \"phu222\",\r\n        password: \"123\",\r\n\r\n    },\r\n    {\r\n        username: \"phu333\",\r\n        password: \"123\",\r\n\r\n    },\r\n    {\r\n        username: \"phu444\",\r\n        password: \"123\",\r\n\r\n    },\r\n\r\n]\r\nconst initialState = {\r\n    role: \"\",\r\n    othersPage: \"\",\r\n    user: \"\"\r\n}\r\nclass LoginPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = { ...initialState }\r\n\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        console.log(this.state.role)\r\n\r\n        for (var i = 0; i < userList.length; i++) {\r\n\r\n            if (values.username === userList[i].username) {\r\n                if (values.password === userList[i].password) {\r\n                    this.setState({\r\n\r\n                        user: values.username,\r\n                    })\r\n                    break;\r\n                } else {\r\n\r\n                }\r\n            } else {\r\n\r\n            }\r\n        }\r\n        console.log(this.state.role)\r\n        let loginInformation = {\r\n            username: this.state.user,\r\n            signPermission: true,\r\n            contractManagePermision: true,\r\n            customerManagePermission: true,\r\n            contractTypeManagePermission: true,\r\n            employeeManagePermission: true,\r\n            signatureManagePermission: true,\r\n        }\r\n        \r\n        this.props.onSubmit(loginInformation)\r\n    };\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n\r\n    };\r\n    ForgetPassword = () => {\r\n        this.setState({\r\n            othersPage: \"ForgetPassword\"\r\n        })\r\n    };\r\n    SendJoinRequest = () => {\r\n        this.setState({\r\n            othersPage: \"SendJoinRequest\"\r\n        })\r\n    };\r\n\r\n    responseGoogle = (response) => {\r\n\r\n    }\r\n    render() {\r\n        var information = this.props.myLoginReducer.map((login, index) => {\r\n\r\n            return (\r\n                <EmployeeSideMenu user={login} />);\r\n\r\n        })\r\n\r\n        if (information.length > 0) {\r\n            return (<div> { information}</div >);\r\n        } else {\r\n            if (this.state.othersPage === \"ForgetPassword\") {\r\n                return (\r\n                    <ForgetPassword />);\r\n\r\n            } else if (this.state.othersPage === \"SendJoinRequest\") {\r\n                return (\r\n                    <SendJoinRequest />);\r\n            } else {\r\n                return (\r\n                    <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\r\n                        <Col span={10} >\r\n                            <Form\r\n                                {...layout}\r\n                                name=\"basic\"\r\n                                className=\"login-form\"\r\n                                initialValues={{\r\n                                    remember: true,\r\n                                }}\r\n                                onFinish={this.onFinish}\r\n                                onFinishFailed={this.onFinishFailed}\r\n\r\n                            >\r\n                                <IconFont type=\"icon-javascript\" style={{ fontSize: '60px', color: '#08c', marginLeft: \"40%\" }} />\r\n                                <Form.Item\r\n                                    label=\"Tên người dùng\"\r\n                                    name=\"username\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Vui lòng nhập tên người dùng',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    label=\"Mật khẩu\"\r\n                                    name=\"password\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Vui lòng nhập Mật khẩu',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input.Password />\r\n                                </Form.Item>\r\n                                <Form.Item {...middleLayout} name=\"remember\" valuePropName=\"checked\" >\r\n                                    <Checkbox>Ghi nhớ</Checkbox>\r\n                                    <Button type=\"link\" htmlType=\"button\"\r\n                                        onClick={this.ForgetPassword}\r\n                                    >\r\n                                        Quên mật khẩu\r\n                                </Button>\r\n                                </Form.Item>\r\n\r\n\r\n\r\n\r\n                                <Form.Item {...tailLayout}>\r\n                                    <Space size=\"large\">\r\n                                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                            Đăng nhập\r\n                                </Button>\r\n                                        <GoogleLogin\r\n                                            clientId=\"390380026430-evq67duag44ce10ro7o7vp3adal9q7bc.apps.googleusercontent.com\"\r\n                                            buttonText=\"Login\"\r\n                                            render={renderProps => (\r\n\r\n\r\n                                                <GoogleOutlined style={{ fontSize: '30px', color: '#08c' }} >\r\n                                                    Đăng nhập với google\r\n                                                </GoogleOutlined>\r\n                                            )}\r\n                                            onSuccess={this.responseGoogle}\r\n                                            onFailure={this.responseGoogle}\r\n                                            cookiePolicy={'single_host_origin'}\r\n                                        />\r\n\r\n                                        <Button type=\"link\" htmlType=\"button\"\r\n                                            onClick={this.SendJoinRequest}>\r\n                                            Gửi yêu cầu đăng ký\r\n                                </Button>\r\n                                    </Space>\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n\r\n                                </Form.Item>\r\n\r\n\r\n\r\n\r\n                            </Form>\r\n\r\n                        </Col></Row>\r\n\r\n                );\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onSubmit: (login) => {\r\n            dispatch(addLogin(login))\r\n        }\r\n    }\r\n}\r\nvar mapStateToProps = state => {\r\n    return {\r\n        myLoginReducer: state.myLoginReducer,\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","import React from 'react';\n\nimport './App.css';\nimport LoginPage from './JsPage/Login/LoginPage'\nimport Particles from 'react-particles-js';\n\nfunction App() {\n\n  return (\n    <div >\n      <Particles\n        style={{ position: \"absolute\" }}\n        height=\"95%\"\n        width=\"95%\"\n        params={{\n          particles: {\n            color: {\n              value: \"#000000\"\n            },\n            line_linked: {\n              color: {\n                value: \"#000000\"\n              }\n            },\n            number: {\n              value: 50\n            },\n            size: {\n              value: 3\n            }\n          }\n        }}\n      />\n      <LoginPage></LoginPage>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var initialState = [];\r\nconst myLoginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LIST_login':\r\n      return state;\r\n    case 'ADD_login':\r\n      state.pop()\r\n      state.push(action.login)\r\n      return [...state];\r\n    case 'LOGOUT':\r\n      state = initialState\r\n      state.pop()\r\n      console.log(state)\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default myLoginReducer;","var initialState = [];\r\nconst myContractReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_contract':\r\n            return state;\r\n        case 'CREATE_contract':\r\n            state.push(action.contract)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_contract':\r\n            state.push(action.contract)\r\n            return [...state];\r\n        case 'DEACTIVE_contract':\r\n            state.push(action.contractID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myContractReducer;","var initialState = [];\r\nconst myContractExtensionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_contractExtension':\r\n            return state;\r\n        case 'CREATE_contractExtension':\r\n            state.push(action.contractExtension)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_contractExtension':\r\n            state.push(action.contractExtension)\r\n            return [...state];\r\n        case 'DEACTIVE_contractExtension':\r\n            state.push(action.contractExtensionID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myContractExtensionReducer;","var initialState = [];\r\nconst myCustomerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_customer':\r\n            return state;\r\n        case 'CREATE_customer':\r\n            state.push(action.customer)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_customer':\r\n            state.push(action.customer)\r\n            return [...state];\r\n        case 'DEACTIVE_customer':\r\n            state.push(action.customerID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myCustomerReducer;","var initialState = [];\r\nconst myContractTypeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_contractType':\r\n            return state;\r\n        case 'CREATE_contractType':\r\n            state.push(action.contractType)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_contractType':\r\n            state.push(action.contractType)\r\n            return [...state];\r\n        case 'DEACTIVE_contractType':\r\n            state.push(action.contractTypeID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myContractTypeReducer;","var initialState = [];\r\nconst myUserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_user':\r\n            return state;\r\n        case 'CREATE_user':\r\n            state.push(action.user)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_user':\r\n            state.push(action.user)\r\n            return [...state];\r\n        case 'DEACTIVE_user':\r\n            state.push(action.userID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myUserReducer;","var initialState = [];\r\nconst mySignatureReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_signature':\r\n            return state;\r\n        case 'CREATE_signature':\r\n            state.push(action.signature)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_signature':\r\n            state.push(action.signature)\r\n            return [...state];\r\n        case 'DEACTIVE_signature':\r\n            state.push(action.signatureID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default mySignatureReducer;","var initialState = [];\r\nconst myEmployeeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_employee':\r\n            return state;\r\n        case 'CREATE_employee':\r\n            state.push(action.employee)\r\n            \r\n            return [...state];\r\n        case 'UPDATE_employee':\r\n            state.push(action.employee)\r\n            return [...state];\r\n        case 'DEACTIVE_employee':\r\n            state.push(action.employeeID)\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myEmployeeReducer;","import { combineReducers } from 'redux'\r\nimport myLoginReducer from './logins'\r\nimport myContractReducer from'./contracts'\r\nimport myContractExtensionReducer from './contractExtensions'\r\nimport myCustomerReducer from'./customers'\r\nimport myContractTypeReducer from './contractTypes'\r\nimport myUserReducer from './users'\r\nimport mySignatureReducer from'./signatures'\r\nimport myEmployeeReducer from './employees'\r\nconst myReducers  = combineReducers({\r\n    myLoginReducer,\r\n    myContractReducer,\r\n    myContractExtensionReducer,\r\n    myCustomerReducer,\r\n    myContractTypeReducer,\r\n    myUserReducer,\r\n    mySignatureReducer,\r\n    myEmployeeReducer,\r\n});\r\nexport default myReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport {createStore} from \"redux\"\nimport allReducers from \"./reducers/myReducers\"\nconst store = createStore(allReducers)\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}